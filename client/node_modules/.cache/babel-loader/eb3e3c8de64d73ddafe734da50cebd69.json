{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/OrderForm/Success/Success.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleCart } from \"../../../store/actions/orderActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid, Button } from \"@material-ui/core\";\nimport CheckCircleOutlinedIcon from \"@material-ui/icons/CheckCircleOutlined\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    width: \"60%\",\n    height: \"60%\"\n  },\n  continue: {\n    backgroundColor: \"black\",\n    color: \"white\",\n    width: \"50%\",\n    marginTop: \"1rem\"\n  },\n  icon: {\n    width: \"9rem\",\n    height: \"9rem\"\n  },\n  \"@media only screen and (max-width: 600px)\": {\n    root: {\n      width: \"90%\"\n    },\n    continue: {\n      width: \"63%\"\n    }\n  }\n}));\n\nfunction Success(props) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Grid, {\n    justify: \"center\",\n    alignContent: \"center\",\n    container: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    justify: \"center\",\n    style: {\n      textAlign: \"center\"\n    },\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircleOutlinedIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      textAlign: \"center\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Hey,\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Your order is Confirmed!\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.continue,\n    style: {},\n    onClick: () => props.toggleModel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Continue Shopping ?\")));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleModel: () => dispatch(toggleCart())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Success);","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/OrderForm/Success/Success.js"],"names":["React","connect","toggleCart","makeStyles","Typography","Grid","Button","CheckCircleOutlinedIcon","useStyles","theme","root","display","justifyContent","alignItems","backgroundColor","width","height","continue","color","marginTop","icon","Success","props","classes","textAlign","marginBottom","fontSize","toggleModel","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleCart } from \"../../../store/actions/orderActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid, Button } from \"@material-ui/core\";\nimport CheckCircleOutlinedIcon from \"@material-ui/icons/CheckCircleOutlined\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"white\",\n        width: \"60%\",\n        height: \"60%\",\n    },\n    continue: {\n        backgroundColor: \"black\",\n        color: \"white\",\n        width: \"50%\",\n        marginTop: \"1rem\",\n    },\n    icon: {\n        width: \"9rem\",\n        height: \"9rem\",\n    },\n    \"@media only screen and (max-width: 600px)\": {\n        root: {\n            width: \"90%\",\n        },\n        continue: {\n            width: \"63%\",\n        },\n    },\n}));\n\nfunction Success(props) {\n    const classes = useStyles();\n    return (\n        <Grid justify=\"center\" alignContent=\"center\" container className={classes.root}>\n            <Grid justify=\"center\" style={{ textAlign: \"center\" }} item xs={12}>\n                <CheckCircleOutlinedIcon className={classes.icon} />\n            </Grid>\n            <Grid item xs={12} style={{ textAlign: \"center\", marginBottom: \"1rem\" }}>\n                <Typography variant=\"subtitle1\" style={{ fontSize: \"1.5rem\" }}>\n                    Hey,\n                </Typography>\n            </Grid>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                <Typography variant=\"h3\">Your order is Confirmed!</Typography>\n            </Grid>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                <Button className={classes.continue} style={{}} onClick={() => props.toggleModel()}>\n                    Continue Shopping ?\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleModel: () => dispatch(toggleCart()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Success);\n"]},"metadata":{},"sourceType":"module"}