{"ast":null,"code":"/*!\n * collection-visit <https://github.com/jonschlinkert/collection-visit>\n *\n * Copyright (c) 2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n'use strict';\n\nvar visit = require('object-visit');\n\nvar mapVisit = require('map-visit');\n\nmodule.exports = function (collection, method, val) {\n  var result;\n\n  if (typeof val === 'string' && method in collection) {\n    var args = [].slice.call(arguments, 2);\n    result = collection[method].apply(collection, args);\n  } else if (Array.isArray(val)) {\n    result = mapVisit.apply(null, arguments);\n  } else {\n    result = visit.apply(null, arguments);\n  }\n\n  if (typeof result !== 'undefined') {\n    return result;\n  }\n\n  return collection;\n};","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/collection-visit/index.js"],"names":["visit","require","mapVisit","module","exports","collection","method","val","result","args","slice","call","arguments","apply","Array","isArray"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAASC,UAAT,EAAqBC,MAArB,EAA6BC,GAA7B,EAAkC;AACjD,MAAIC,MAAJ;;AAEA,MAAI,OAAOD,GAAP,KAAe,QAAf,IAA4BD,MAAM,IAAID,UAA1C,EAAuD;AACrD,QAAII,IAAI,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcC,SAAd,EAAyB,CAAzB,CAAX;AACAJ,IAAAA,MAAM,GAAGH,UAAU,CAACC,MAAD,CAAV,CAAmBO,KAAnB,CAAyBR,UAAzB,EAAqCI,IAArC,CAAT;AACD,GAHD,MAGO,IAAIK,KAAK,CAACC,OAAN,CAAcR,GAAd,CAAJ,EAAwB;AAC7BC,IAAAA,MAAM,GAAGN,QAAQ,CAACW,KAAT,CAAe,IAAf,EAAqBD,SAArB,CAAT;AACD,GAFM,MAEA;AACLJ,IAAAA,MAAM,GAAGR,KAAK,CAACa,KAAN,CAAY,IAAZ,EAAkBD,SAAlB,CAAT;AACD;;AAED,MAAI,OAAOJ,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAOA,MAAP;AACD;;AAED,SAAOH,UAAP;AACD,CAjBD","sourcesContent":["/*!\n * collection-visit <https://github.com/jonschlinkert/collection-visit>\n *\n * Copyright (c) 2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar visit = require('object-visit');\nvar mapVisit = require('map-visit');\n\nmodule.exports = function(collection, method, val) {\n  var result;\n\n  if (typeof val === 'string' && (method in collection)) {\n    var args = [].slice.call(arguments, 2);\n    result = collection[method].apply(collection, args);\n  } else if (Array.isArray(val)) {\n    result = mapVisit.apply(null, arguments);\n  } else {\n    result = visit.apply(null, arguments);\n  }\n\n  if (typeof result !== 'undefined') {\n    return result;\n  }\n\n  return collection;\n};\n"]},"metadata":{},"sourceType":"script"}