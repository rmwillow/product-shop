{"ast":null,"code":"import _slicedToArray from\"/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"label\",\"type\",\"variant\"];import React from\"react\";import{TextField,Button,Typography}from\"@material-ui/core\";import{connect}from\"react-redux\";import{submitOrder as _submitOrder,submitForm as _submitForm}from\"../../store/actions/orderActions\";import ChevronLeftIcon from\"@material-ui/icons/ChevronLeft\";import*as yup from\"yup\";import{Formik,Form,useField}from\"formik\";import{makeStyles}from\"@material-ui/core/styles\";var useStyles=makeStyles(function(theme){return{root:{marginBottom:\"1rem\",width:\"100%\",\"& label.Mui-focused\":{color:\"grey\"},\"& .MuiInput-underline:after\":{borderBottomColor:\"red\"},\"& .MuiOutlinedInput-root\":{\"& fieldset\":{borderColor:\"black\",borderWidth:\"3px\"},\"&:hover fieldset\":{borderColor:\"grey\"},\"&.Mui-focused fieldset\":{borderColor:\"black\"}}},submitModel:{backgroundColor:\"white\",width:\"100%\",padding:\"2rem\",height:\"90%\",borderTopLeftRadius:\"1rem\",borderTopRightRadius:\"1rem\"}};});var validationSchema=yup.object({name:yup.string().required(),email:yup.string().email(\"Enter a valid Email\").required(),address:yup.string().required(\"A valid address is required\"),phone:yup.string().min(7,\"should atlest be 7 digits\").required(),pin:yup.string().min(7,\"should atlest be 7 digits\").required()});var CustomField=function CustomField(_ref){var label=_ref.label,type=_ref.type,variant=_ref.variant,props=_objectWithoutProperties(_ref,_excluded);var _useField=useField(props),_useField2=_slicedToArray(_useField,2),field=_useField2[0],meta=_useField2[1];var errorText=meta.error&&meta.touched?meta.error:\"\";var classes=useStyles();return/*#__PURE__*/React.createElement(TextField,Object.assign({className:classes.root,variant:variant,label:label},field,{helperText:errorText,error:!!errorText,type:type}));};function OrderForm(props){var submit=function submit(name,email,phone,address,pin){var ids=[];for(var i=0;i<props.cart.length;i++){ids.push(props.cart[i]._id);}var order={products:ids,name:name,sizes:props.sizes,phone:phone,address:address,pin:pin,email:email};console.log(order);props.submitOrder(order);};var classes=useStyles();return/*#__PURE__*/React.createElement(\"div\",{className:classes.submitModel},/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",style:{textAlign:\"center\",fontSize:\"4rem\"}},\"Just some details\"),/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\",marginBottom:\"1.3rem\"}},/*#__PURE__*/React.createElement(Typography,{variant:\"p\"},\"Some details to deliver your Order at the right place\")),/*#__PURE__*/React.createElement(Formik,{initialValues:{name:\"\",email:\"\",phone:\"\",address:\"\",pin:\"\"},onSubmit:function onSubmit(data,_ref2){var setSubmitting=_ref2.setSubmitting;setSubmitting(true);//! make async call here!!!!\nsubmit(data.name,data.email,data.phone,data.address,data.pin);setSubmitting(false);},validationSchema:validationSchema},function(_ref3){var values=_ref3.values,errors=_ref3.errors,isSubmitting=_ref3.isSubmitting;return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CustomField,{label:\"Name\",variant:\"outlined\",name:\"name\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CustomField,{label:\"Email\",variant:\"outlined\",name:\"email\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CustomField,{label:\"Phone\",variant:\"outlined\",name:\"phone\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CustomField,{label:\"Address\",variant:\"outlined\",name:\"address\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CustomField,{label:\"Pin\",variant:\"outlined\",name:\"pin\"})),/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\",width:\"100%\",marginBottom:\"1rem\"}},/*#__PURE__*/React.createElement(Button,{disabled:isSubmitting,style:{color:\"white\",backgroundColor:\"black\",width:\"100%\"},type:\"submit\"},\"Place Order\")));}),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.submitForm();},style:{color:\"white\",backgroundColor:\"black\",width:\"100%\"}},/*#__PURE__*/React.createElement(ChevronLeftIcon,null),\"Go back\"));}var mapStateToProps=function mapStateToProps(state){return{cart:state.orders.cart,sizes:state.orders.sizes};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{submitOrder:function submitOrder(order){return dispatch(_submitOrder(order));},submitForm:function submitForm(){return dispatch(_submitForm());}};};export default connect(mapStateToProps,mapDispatchToProps)(OrderForm);","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/OrderForm/OrderForm.js"],"names":["React","TextField","Button","Typography","connect","submitOrder","submitForm","ChevronLeftIcon","yup","Formik","Form","useField","makeStyles","useStyles","theme","root","marginBottom","width","color","borderBottomColor","borderColor","borderWidth","submitModel","backgroundColor","padding","height","borderTopLeftRadius","borderTopRightRadius","validationSchema","object","name","string","required","email","address","phone","min","pin","CustomField","label","type","variant","props","field","meta","errorText","error","touched","classes","OrderForm","submit","ids","i","cart","length","push","_id","order","products","sizes","console","log","textAlign","fontSize","data","setSubmitting","values","errors","isSubmitting","mapStateToProps","state","orders","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { TextField, Button, Typography } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { submitOrder, submitForm } from \"../../store/actions/orderActions\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport * as yup from \"yup\";\nimport { Formik, Form, useField } from \"formik\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: \"1rem\",\n        width: \"100%\",\n        \"& label.Mui-focused\": {\n            color: \"grey\",\n        },\n        \"& .MuiInput-underline:after\": {\n            borderBottomColor: \"red\",\n        },\n        \"& .MuiOutlinedInput-root\": {\n            \"& fieldset\": {\n                borderColor: \"black\",\n                borderWidth: \"3px\",\n            },\n            \"&:hover fieldset\": {\n                borderColor: \"grey\",\n            },\n            \"&.Mui-focused fieldset\": {\n                borderColor: \"black\",\n            },\n        },\n    },\n    submitModel: {\n        backgroundColor: \"white\",\n        width: \"100%\",\n        padding: \"2rem\",\n        height: \"90%\",\n        borderTopLeftRadius: \"1rem\",\n        borderTopRightRadius: \"1rem\",\n    },\n}));\nconst validationSchema = yup.object({\n    name: yup.string().required(),\n    email: yup.string().email(\"Enter a valid Email\").required(),\n    address: yup.string().required(\"A valid address is required\"),\n    phone: yup.string().min(7, \"should atlest be 7 digits\").required(),\n    pin: yup.string().min(7, \"should atlest be 7 digits\").required(),\n});\n\nconst CustomField = ({ label, type, variant, ...props }) => {\n    const [field, meta] = useField(props);\n    const errorText = meta.error && meta.touched ? meta.error : \"\";\n    const classes = useStyles();\n    return (\n        <TextField\n            className={classes.root}\n            variant={variant}\n            label={label}\n            {...field}\n            helperText={errorText}\n            error={!!errorText}\n            type={type}\n        />\n    );\n};\n\nfunction OrderForm(props) {\n    const submit = (name, email, phone, address, pin) => {\n        let ids = [];\n        for (let i = 0; i < props.cart.length; i++) {\n            ids.push(props.cart[i]._id);\n        }\n        const order = {\n            products: ids,\n            name: name,\n            sizes: props.sizes,\n            phone: phone,\n            address: address,\n            pin: pin,\n            email: email,\n        };\n        console.log(order);\n        props.submitOrder(order);\n    };\n    const classes = useStyles();\n    return (\n        <div className={classes.submitModel}>\n            <Typography variant=\"h3\" style={{ textAlign: \"center\", fontSize: \"4rem\" }}>\n                Just some details\n            </Typography>\n            <div style={{ textAlign: \"center\", marginBottom: \"1.3rem\" }}>\n                <Typography variant=\"p\">\n                    Some details to deliver your Order at the right place\n                </Typography>\n            </div>\n            <Formik\n                initialValues={{ name: \"\", email: \"\", phone: \"\", address: \"\", pin: \"\" }}\n                onSubmit={(data, { setSubmitting }) => {\n                    setSubmitting(true);\n                    //! make async call here!!!!\n                    submit(data.name, data.email, data.phone, data.address, data.pin);\n                    setSubmitting(false);\n                }}\n                validationSchema={validationSchema}\n            >\n                {({ values, errors, isSubmitting }) => (\n                    <Form>\n                        <div>\n                            <CustomField label=\"Name\" variant=\"outlined\" name=\"name\" />\n                        </div>\n                        <div>\n                            <CustomField label=\"Email\" variant=\"outlined\" name=\"email\" />\n                        </div>\n                        <div>\n                            <CustomField label=\"Phone\" variant=\"outlined\" name=\"phone\" />\n                        </div>\n                        <div>\n                            <CustomField label=\"Address\" variant=\"outlined\" name=\"address\" />\n                        </div>\n                        <div>\n                            <CustomField label=\"Pin\" variant=\"outlined\" name=\"pin\" />\n                        </div>\n                        <div style={{ textAlign: \"center\", width: \"100%\", marginBottom: \"1rem\" }}>\n                            <Button\n                                disabled={isSubmitting}\n                                style={{ color: \"white\", backgroundColor: \"black\", width: \"100%\" }}\n                                type=\"submit\"\n                            >\n                                Place Order\n                            </Button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n            <Button\n                onClick={() => props.submitForm()}\n                style={{ color: \"white\", backgroundColor: \"black\", width: \"100%\" }}\n            >\n                <ChevronLeftIcon />\n                Go back\n            </Button>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cart: state.orders.cart,\n        sizes: state.orders.sizes,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        submitOrder: (order) => dispatch(submitOrder(order)),\n        submitForm: () => dispatch(submitForm()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderForm);\n"]},"metadata":{},"sourceType":"module"}