{"ast":null,"code":"'use strict';\n\nmodule.exports = function union(init) {\n  if (!Array.isArray(init)) {\n    throw new TypeError('arr-union expects the first argument to be an array.');\n  }\n\n  var len = arguments.length;\n  var i = 0;\n\n  while (++i < len) {\n    var arg = arguments[i];\n    if (!arg) continue;\n\n    if (!Array.isArray(arg)) {\n      arg = [arg];\n    }\n\n    for (var j = 0; j < arg.length; j++) {\n      var ele = arg[j];\n\n      if (init.indexOf(ele) >= 0) {\n        continue;\n      }\n\n      init.push(ele);\n    }\n  }\n\n  return init;\n};","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/arr-union/index.js"],"names":["module","exports","union","init","Array","isArray","TypeError","len","arguments","length","i","arg","j","ele","indexOf","push"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,IAAf,EAAqB;AACpC,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAL,EAA0B;AACxB,UAAM,IAAIG,SAAJ,CAAc,sDAAd,CAAN;AACD;;AAED,MAAIC,GAAG,GAAGC,SAAS,CAACC,MAApB;AACA,MAAIC,CAAC,GAAG,CAAR;;AAEA,SAAO,EAAEA,CAAF,GAAMH,GAAb,EAAkB;AAChB,QAAII,GAAG,GAAGH,SAAS,CAACE,CAAD,CAAnB;AACA,QAAI,CAACC,GAAL,EAAU;;AAEV,QAAI,CAACP,KAAK,CAACC,OAAN,CAAcM,GAAd,CAAL,EAAyB;AACvBA,MAAAA,GAAG,GAAG,CAACA,GAAD,CAAN;AACD;;AAED,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACF,MAAxB,EAAgCG,CAAC,EAAjC,EAAqC;AACnC,UAAIC,GAAG,GAAGF,GAAG,CAACC,CAAD,CAAb;;AAEA,UAAIT,IAAI,CAACW,OAAL,CAAaD,GAAb,KAAqB,CAAzB,EAA4B;AAC1B;AACD;;AACDV,MAAAA,IAAI,CAACY,IAAL,CAAUF,GAAV;AACD;AACF;;AACD,SAAOV,IAAP;AACD,CA1BD","sourcesContent":["'use strict';\n\nmodule.exports = function union(init) {\n  if (!Array.isArray(init)) {\n    throw new TypeError('arr-union expects the first argument to be an array.');\n  }\n\n  var len = arguments.length;\n  var i = 0;\n\n  while (++i < len) {\n    var arg = arguments[i];\n    if (!arg) continue;\n\n    if (!Array.isArray(arg)) {\n      arg = [arg];\n    }\n\n    for (var j = 0; j < arg.length; j++) {\n      var ele = arg[j];\n\n      if (init.indexOf(ele) >= 0) {\n        continue;\n      }\n      init.push(ele);\n    }\n  }\n  return init;\n};\n"]},"metadata":{},"sourceType":"script"}