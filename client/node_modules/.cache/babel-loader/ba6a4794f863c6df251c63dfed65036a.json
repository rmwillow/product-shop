{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{toggleCart}from\"../../../store/actions/orderActions\";import{makeStyles}from\"@material-ui/core/styles\";import{Typography,Grid,Button}from\"@material-ui/core\";import CheckCircleOutlinedIcon from\"@material-ui/icons/CheckCircleOutlined\";var useStyles=makeStyles(function(theme){return{root:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",backgroundColor:\"white\",width:\"60%\",height:\"60%\"},continue:{backgroundColor:\"black\",color:\"white\",width:\"50%\",marginTop:\"1rem\"},icon:{width:\"9rem\",height:\"9rem\"},\"@media only screen and (max-width: 600px)\":{root:{width:\"90%\"},continue:{width:\"63%\"}}};});function Success(props){var classes=useStyles();return/*#__PURE__*/React.createElement(Grid,{justify:\"center\",alignContent:\"center\",container:true,className:classes.root},/*#__PURE__*/React.createElement(Grid,{justify:\"center\",style:{textAlign:\"center\"},item:true,xs:12},/*#__PURE__*/React.createElement(CheckCircleOutlinedIcon,{className:classes.icon})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,style:{textAlign:\"center\",marginBottom:\"1rem\"}},/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",style:{fontSize:\"1.5rem\"}},\"Hey,\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(Typography,{variant:\"h3\"},\"Your order is Confirmed!\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(Button,{className:classes.continue,style:{},onClick:function onClick(){return props.toggleModel();}},\"Continue Shopping ?\")));}var mapDispatchToProps=function mapDispatchToProps(dispatch){return{toggleModel:function toggleModel(){return dispatch(toggleCart());}};};export default connect(null,mapDispatchToProps)(Success);","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/OrderForm/Success/Success.js"],"names":["React","connect","toggleCart","makeStyles","Typography","Grid","Button","CheckCircleOutlinedIcon","useStyles","theme","root","display","justifyContent","alignItems","backgroundColor","width","height","continue","color","marginTop","icon","Success","props","classes","textAlign","marginBottom","fontSize","toggleModel","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,qCAA3B,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,MAA3B,KAAyC,mBAAzC,CACA,MAAOC,CAAAA,uBAAP,KAAoC,wCAApC,CACA,GAAMC,CAAAA,SAAS,CAAGL,UAAU,CAAC,SAACM,KAAD,QAAY,CACrCC,IAAI,CAAE,CACFC,OAAO,CAAE,MADP,CAEFC,cAAc,CAAE,QAFd,CAGFC,UAAU,CAAE,QAHV,CAIFC,eAAe,CAAE,OAJf,CAKFC,KAAK,CAAE,KALL,CAMFC,MAAM,CAAE,KANN,CAD+B,CASrCC,QAAQ,CAAE,CACNH,eAAe,CAAE,OADX,CAENI,KAAK,CAAE,OAFD,CAGNH,KAAK,CAAE,KAHD,CAINI,SAAS,CAAE,MAJL,CAT2B,CAerCC,IAAI,CAAE,CACFL,KAAK,CAAE,MADL,CAEFC,MAAM,CAAE,MAFN,CAf+B,CAmBrC,4CAA6C,CACzCN,IAAI,CAAE,CACFK,KAAK,CAAE,KADL,CADmC,CAIzCE,QAAQ,CAAE,CACNF,KAAK,CAAE,KADD,CAJ+B,CAnBR,CAAZ,EAAD,CAA5B,CA6BA,QAASM,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACpB,GAAMC,CAAAA,OAAO,CAAGf,SAAS,EAAzB,CACA,mBACI,oBAAC,IAAD,EAAM,OAAO,CAAC,QAAd,CAAuB,YAAY,CAAC,QAApC,CAA6C,SAAS,KAAtD,CAAuD,SAAS,CAAEe,OAAO,CAACb,IAA1E,eACI,oBAAC,IAAD,EAAM,OAAO,CAAC,QAAd,CAAuB,KAAK,CAAE,CAAEc,SAAS,CAAE,QAAb,CAA9B,CAAuD,IAAI,KAA3D,CAA4D,EAAE,CAAE,EAAhE,eACI,oBAAC,uBAAD,EAAyB,SAAS,CAAED,OAAO,CAACH,IAA5C,EADJ,CADJ,cAII,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,KAAK,CAAE,CAAEI,SAAS,CAAE,QAAb,CAAuBC,YAAY,CAAE,MAArC,CAA1B,eACI,oBAAC,UAAD,EAAY,OAAO,CAAC,WAApB,CAAgC,KAAK,CAAE,CAAEC,QAAQ,CAAE,QAAZ,CAAvC,SADJ,CAJJ,cASI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,KAAK,CAAE,CAAEF,SAAS,CAAE,QAAb,CAA1B,eACI,oBAAC,UAAD,EAAY,OAAO,CAAC,IAApB,6BADJ,CATJ,cAYI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,KAAK,CAAE,CAAEA,SAAS,CAAE,QAAb,CAA1B,eACI,oBAAC,MAAD,EAAQ,SAAS,CAAED,OAAO,CAACN,QAA3B,CAAqC,KAAK,CAAE,EAA5C,CAAgD,OAAO,CAAE,yBAAMK,CAAAA,KAAK,CAACK,WAAN,EAAN,EAAzD,wBADJ,CAZJ,CADJ,CAoBH,CAED,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAO,CACHF,WAAW,CAAE,6BAAME,CAAAA,QAAQ,CAAC3B,UAAU,EAAX,CAAd,EADV,CAAP,CAGH,CAJD,CAMA,cAAeD,CAAAA,OAAO,CAAC,IAAD,CAAO2B,kBAAP,CAAP,CAAkCP,OAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleCart } from \"../../../store/actions/orderActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid, Button } from \"@material-ui/core\";\nimport CheckCircleOutlinedIcon from \"@material-ui/icons/CheckCircleOutlined\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"white\",\n        width: \"60%\",\n        height: \"60%\",\n    },\n    continue: {\n        backgroundColor: \"black\",\n        color: \"white\",\n        width: \"50%\",\n        marginTop: \"1rem\",\n    },\n    icon: {\n        width: \"9rem\",\n        height: \"9rem\",\n    },\n    \"@media only screen and (max-width: 600px)\": {\n        root: {\n            width: \"90%\",\n        },\n        continue: {\n            width: \"63%\",\n        },\n    },\n}));\n\nfunction Success(props) {\n    const classes = useStyles();\n    return (\n        <Grid justify=\"center\" alignContent=\"center\" container className={classes.root}>\n            <Grid justify=\"center\" style={{ textAlign: \"center\" }} item xs={12}>\n                <CheckCircleOutlinedIcon className={classes.icon} />\n            </Grid>\n            <Grid item xs={12} style={{ textAlign: \"center\", marginBottom: \"1rem\" }}>\n                <Typography variant=\"subtitle1\" style={{ fontSize: \"1.5rem\" }}>\n                    Hey,\n                </Typography>\n            </Grid>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                <Typography variant=\"h3\">Your order is Confirmed!</Typography>\n            </Grid>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                <Button className={classes.continue} style={{}} onClick={() => props.toggleModel()}>\n                    Continue Shopping ?\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleModel: () => dispatch(toggleCart()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Success);\n"]},"metadata":{},"sourceType":"module"}