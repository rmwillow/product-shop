{"ast":null,"code":"var _ = require('lodash');\n\nvar url = require('url');\n\nvar isGlob = require('is-glob');\n\nvar micromatch = require('micromatch');\n\nvar ERRORS = require('./errors');\n\nmodule.exports = {\n  match: matchContext\n};\n\nfunction matchContext(context, uri, req) {\n  // single path\n  if (isStringPath(context)) {\n    return matchSingleStringPath(context, uri);\n  } // single glob path\n\n\n  if (isGlobPath(context)) {\n    return matchSingleGlobPath(context, uri);\n  } // multi path\n\n\n  if (Array.isArray(context)) {\n    if (context.every(isStringPath)) {\n      return matchMultiPath(context, uri);\n    }\n\n    if (context.every(isGlobPath)) {\n      return matchMultiGlobPath(context, uri);\n    }\n\n    throw new Error(ERRORS.ERR_CONTEXT_MATCHER_INVALID_ARRAY);\n  } // custom matching\n\n\n  if (_.isFunction(context)) {\n    var pathname = getUrlPathName(uri);\n    return context(pathname, req);\n  }\n\n  throw new Error(ERRORS.ERR_CONTEXT_MATCHER_GENERIC);\n}\n/**\n * @param  {String} context '/api'\n * @param  {String} uri     'http://example.org/api/b/c/d.html'\n * @return {Boolean}\n */\n\n\nfunction matchSingleStringPath(context, uri) {\n  var pathname = getUrlPathName(uri);\n  return pathname.indexOf(context) === 0;\n}\n\nfunction matchSingleGlobPath(pattern, uri) {\n  var pathname = getUrlPathName(uri);\n  var matches = micromatch(pathname, pattern);\n  return matches && matches.length > 0;\n}\n\nfunction matchMultiGlobPath(patternList, uri) {\n  return matchSingleGlobPath(patternList, uri);\n}\n/**\n * @param  {String} contextList ['/api', '/ajax']\n * @param  {String} uri     'http://example.org/api/b/c/d.html'\n * @return {Boolean}\n */\n\n\nfunction matchMultiPath(contextList, uri) {\n  for (var i = 0; i < contextList.length; i++) {\n    var context = contextList[i];\n\n    if (matchSingleStringPath(context, uri)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Parses URI and returns RFC 3986 path\n *\n * @param  {String} uri from req.url\n * @return {String}     RFC 3986 path\n */\n\n\nfunction getUrlPathName(uri) {\n  return uri && url.parse(uri).pathname;\n}\n\nfunction isStringPath(context) {\n  return _.isString(context) && !isGlob(context);\n}\n\nfunction isGlobPath(context) {\n  return isGlob(context);\n}","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/http-proxy-middleware/lib/context-matcher.js"],"names":["_","require","url","isGlob","micromatch","ERRORS","module","exports","match","matchContext","context","uri","req","isStringPath","matchSingleStringPath","isGlobPath","matchSingleGlobPath","Array","isArray","every","matchMultiPath","matchMultiGlobPath","Error","ERR_CONTEXT_MATCHER_INVALID_ARRAY","isFunction","pathname","getUrlPathName","ERR_CONTEXT_MATCHER_GENERIC","indexOf","pattern","matches","length","patternList","contextList","i","parse","isString"],"mappings":"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","sourcesContent":["var _ = require('lodash')\nvar url = require('url')\nvar isGlob = require('is-glob')\nvar micromatch = require('micromatch')\nvar ERRORS = require('./errors')\n\nmodule.exports = {\n  match: matchContext\n}\n\nfunction matchContext(context, uri, req) {\n  // single path\n  if (isStringPath(context)) {\n    return matchSingleStringPath(context, uri)\n  }\n\n  // single glob path\n  if (isGlobPath(context)) {\n    return matchSingleGlobPath(context, uri)\n  }\n\n  // multi path\n  if (Array.isArray(context)) {\n    if (context.every(isStringPath)) {\n      return matchMultiPath(context, uri)\n    }\n    if (context.every(isGlobPath)) {\n      return matchMultiGlobPath(context, uri)\n    }\n\n    throw new Error(ERRORS.ERR_CONTEXT_MATCHER_INVALID_ARRAY)\n  }\n\n  // custom matching\n  if (_.isFunction(context)) {\n    var pathname = getUrlPathName(uri)\n    return context(pathname, req)\n  }\n\n  throw new Error(ERRORS.ERR_CONTEXT_MATCHER_GENERIC)\n}\n\n/**\n * @param  {String} context '/api'\n * @param  {String} uri     'http://example.org/api/b/c/d.html'\n * @return {Boolean}\n */\nfunction matchSingleStringPath(context, uri) {\n  var pathname = getUrlPathName(uri)\n  return pathname.indexOf(context) === 0\n}\n\nfunction matchSingleGlobPath(pattern, uri) {\n  var pathname = getUrlPathName(uri)\n  var matches = micromatch(pathname, pattern)\n  return matches && matches.length > 0\n}\n\nfunction matchMultiGlobPath(patternList, uri) {\n  return matchSingleGlobPath(patternList, uri)\n}\n\n/**\n * @param  {String} contextList ['/api', '/ajax']\n * @param  {String} uri     'http://example.org/api/b/c/d.html'\n * @return {Boolean}\n */\nfunction matchMultiPath(contextList, uri) {\n  for (var i = 0; i < contextList.length; i++) {\n    var context = contextList[i]\n    if (matchSingleStringPath(context, uri)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Parses URI and returns RFC 3986 path\n *\n * @param  {String} uri from req.url\n * @return {String}     RFC 3986 path\n */\nfunction getUrlPathName(uri) {\n  return uri && url.parse(uri).pathname\n}\n\nfunction isStringPath(context) {\n  return _.isString(context) && !isGlob(context)\n}\n\nfunction isGlobPath(context) {\n  return isGlob(context)\n}\n"]},"metadata":{},"sourceType":"script"}