{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/containers/Register/Register.js\";\nimport React, { Component } from \"react\";\nimport RegisterForm from \"../../components/Auth/RegisterForm\";\nimport LoginForm from \"../../components/Auth/LoginForm\";\nimport { Button } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport * as actions from \"../../store/actions/authActions\";\nimport Alert from \"../../components/Alerts/Alert\";\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      msg: null\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const error = this.props.error;\n\n    if (error !== prevProps.error) {\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    console.log(\"====================================\");\n    console.log(this.state.msg);\n    console.log(\"====================================\");\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, this.state.msg != null ? /*#__PURE__*/React.createElement(Alert, {\n      msg: this.state.msg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 43\n      }\n    }) : null, this.props.isLogin && !this.props.isAuth ? /*#__PURE__*/React.createElement(LoginForm, {\n      isAuth: this.props.isAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(RegisterForm, {\n      isAuth: this.props.isAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        color: \"white\",\n        backgroundColor: \"black\",\n        width: \"100%\"\n      },\n      onClick: () => this.props.changeMode(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, this.props.isLogin ? \"Are you a new user? \" : \"Already a user?\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error,\n    isLogin: state.auth.isLogin,\n    isAuth: state.auth.isAuth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeMode: () => {\n      dispatch(actions.changeAuthMode());\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Register));","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/containers/Register/Register.js"],"names":["React","Component","RegisterForm","LoginForm","Button","connect","withRouter","actions","Alert","Register","state","msg","componentDidUpdate","prevProps","error","props","id","setState","render","console","log","isLogin","isAuth","textAlign","width","color","backgroundColor","changeMode","mapStateToProps","auth","mapDispatchToProps","dispatch","changeAuthMode"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport RegisterForm from \"../../components/Auth/RegisterForm\";\nimport LoginForm from \"../../components/Auth/LoginForm\";\nimport { Button } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport * as actions from \"../../store/actions/authActions\";\nimport Alert from \"../../components/Alerts/Alert\";\n\nclass Register extends Component {\n    state = {\n        msg: null,\n    };\n    componentDidUpdate(prevProps) {\n        const error = this.props.error;\n        if (error !== prevProps.error) {\n            if (error.id === \"REGISTER_FAIL\") {\n                this.setState({\n                    msg: error.msg.msg,\n                });\n            } else if (error.id === \"LOGIN_FAIL\") {\n                this.setState({\n                    msg: error.msg.msg,\n                });\n            } else {\n                this.setState({\n                    msg: null,\n                });\n            }\n        }\n    }\n    render() {\n        console.log(\"====================================\");\n        console.log(this.state.msg);\n        console.log(\"====================================\");\n        return (\n            <React.Fragment>\n                {this.state.msg != null ? <Alert msg={this.state.msg} /> : null}\n                {this.props.isLogin && !this.props.isAuth ? (\n                    <LoginForm isAuth={this.props.isAuth} />\n                ) : (\n                    <RegisterForm isAuth={this.props.isAuth} />\n                )}\n                <div style={{ textAlign: \"center\", width: \"100%\" }}>\n                    <Button\n                        style={{ color: \"white\", backgroundColor: \"black\", width: \"100%\" }}\n                        onClick={() => this.props.changeMode()}\n                    >\n                        {this.props.isLogin ? \"Are you a new user? \" : \"Already a user?\"}\n                    </Button>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.error,\n        isLogin: state.auth.isLogin,\n        isAuth: state.auth.isAuth,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeMode: () => {\n            dispatch(actions.changeAuthMode());\n        },\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Register));\n"]},"metadata":{},"sourceType":"module"}