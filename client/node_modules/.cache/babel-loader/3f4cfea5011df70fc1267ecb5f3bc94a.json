{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Nav/Categories/PriceSlider.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/products\";\nconst useStyles = makeStyles({\n  root: {\n    color: \"black\",\n    marginTop: \"1rem\",\n    width: 200,\n    marginLeft: \"2rem\"\n  }\n});\nconst marks = [{\n  value: 0,\n  label: \"0\"\n}, {\n  value: 250,\n  label: \"250\"\n}, {\n  value: 500,\n  label: \"500\"\n}, {\n  value: 750,\n  label: \"750\"\n}, {\n  value: 1000,\n  label: \"1000\"\n}];\n\nfunction RangeSlider(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState([0, 500]);\n\n  const handleChange = (event, newValue) => {\n    console.log(newValue[0]);\n    props.setPrices(newValue[0], newValue[1]);\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    id: \"range-slider\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Price Range\"), /*#__PURE__*/React.createElement(Slider, {\n    value: value,\n    onChangeCommitted: handleChange,\n    style: {\n      color: \"black\"\n    },\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"range-slider\",\n    marks: marks,\n    step: null,\n    max: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPrices: (min, max) => dispatch(actions.setPrices(min, max))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(RangeSlider);","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Nav/Categories/PriceSlider.js"],"names":["React","makeStyles","Typography","Slider","connect","actions","useStyles","root","color","marginTop","width","marginLeft","marks","value","label","RangeSlider","props","classes","setValue","useState","handleChange","event","newValue","console","log","setPrices","mapDispatchToProps","dispatch","min","max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iCAAzB;AACA,MAAMC,SAAS,GAAGL,UAAU,CAAC;AACzBM,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,OADL;AAEFC,IAAAA,SAAS,EAAE,MAFT;AAGFC,IAAAA,KAAK,EAAE,GAHL;AAIFC,IAAAA,UAAU,EAAE;AAJV;AADmB,CAAD,CAA5B;AAQA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,KAAK,EAAE,CADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADU,EAKV;AACID,EAAAA,KAAK,EAAE,GADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALU,EASV;AACID,EAAAA,KAAK,EAAE,GADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CATU,EAaV;AACID,EAAAA,KAAK,EAAE,GADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAbU,EAiBV;AACID,EAAAA,KAAK,EAAE,IADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAjBU,CAAd;;AAsBA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM,CAACO,KAAD,EAAQK,QAAR,IAAoBlB,KAAK,CAACmB,QAAN,CAAe,CAAC,CAAD,EAAI,GAAJ,CAAf,CAA1B;;AAEA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAAC,CAAD,CAApB;AACAN,IAAAA,KAAK,CAACS,SAAN,CAAgBH,QAAQ,CAAC,CAAD,CAAxB,EAA6BA,QAAQ,CAAC,CAAD,CAArC;AACAJ,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACV,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,cAAf;AAA8B,IAAA,YAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAII,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEM,KADX;AAEI,IAAA,iBAAiB,EAAEO,YAFvB;AAGI,IAAA,KAAK,EAAE;AAAEZ,MAAAA,KAAK,EAAE;AAAT,KAHX;AAII,IAAA,iBAAiB,EAAC,MAJtB;AAKI,uBAAgB,cALpB;AAMI,IAAA,KAAK,EAAEI,KANX;AAOI,IAAA,IAAI,EAAE,IAPV;AAQI,IAAA,GAAG,EAAE,IART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAiBH;;AAED,MAAMc,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHF,IAAAA,SAAS,EAAE,CAACG,GAAD,EAAMC,GAAN,KAAcF,QAAQ,CAACtB,OAAO,CAACoB,SAAR,CAAkBG,GAAlB,EAAuBC,GAAvB,CAAD;AAD9B,GAAP;AAGH,CAJD;;AAMA,eAAezB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCX,WAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/products\";\nconst useStyles = makeStyles({\n    root: {\n        color: \"black\",\n        marginTop: \"1rem\",\n        width: 200,\n        marginLeft: \"2rem\",\n    },\n});\nconst marks = [\n    {\n        value: 0,\n        label: \"0\",\n    },\n    {\n        value: 250,\n        label: \"250\",\n    },\n    {\n        value: 500,\n        label: \"500\",\n    },\n    {\n        value: 750,\n        label: \"750\",\n    },\n    {\n        value: 1000,\n        label: \"1000\",\n    },\n];\nfunction RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([0, 500]);\n\n    const handleChange = (event, newValue) => {\n        console.log(newValue[0]);\n        props.setPrices(newValue[0], newValue[1]);\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Typography id=\"range-slider\" gutterBottom>\n                Price Range\n            </Typography>\n            <Slider\n                value={value}\n                onChangeCommitted={handleChange}\n                style={{ color: \"black\" }}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                marks={marks}\n                step={null}\n                max={1000}\n            />\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setPrices: (min, max) => dispatch(actions.setPrices(min, max)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(RangeSlider);\n"]},"metadata":{},"sourceType":"module"}