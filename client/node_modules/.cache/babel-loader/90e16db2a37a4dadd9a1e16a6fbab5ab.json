{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Item/Item.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CardActionArea, CardMedia, Typography, CardContent, Card } from \"@material-ui/core\";\nimport { motion } from \"framer-motion\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { addToCart } from \"../../store/actions/orderActions\";\nimport { setSelect } from \"../../store/actions/products\";\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: \"#f6f6f6\",\n    maxWidth: 345\n  },\n  media: {\n    height: 325\n  },\n  actionArea: {\n    \"&:hover $focusHighlight\": {\n      opacity: 0\n    }\n  },\n  focusHighlight: {}\n}); //============= framer =================\n\nconst transition = {\n  duration: 0.5,\n  ease: [0.43, 0.13, 0.23, 0.96]\n};\nconst thumbnailVariants = {\n  initial: {\n    scale: 0.9,\n    opacity: 0\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition\n  },\n  exit: {\n    scale: 0.5,\n    opacity: 0,\n    transition: {\n      duration: 1.5,\n      ...transition\n    }\n  }\n};\nconst frameVariants = {\n  hover: {\n    scale: 0.95\n  }\n};\nconst imageVariants = {\n  hover: {\n    scale: 1.1\n  }\n}; // ===================\n\nconst SimpleCard = props => {\n  const classes = useStyles();\n  console.log(props.data._id);\n  return /*#__PURE__*/React.createElement(motion.div, {\n    variants: thumbnailVariants,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(motion.div, {\n    className: \"frame\",\n    whileHover: \"hover\",\n    variants: frameVariants,\n    transition: transition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    elevation: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    disableRipple: true,\n    disableTouchRipple: true,\n    classes: {\n      root: classes.actionArea,\n      focusHighlight: classes.focusHighlight\n    },\n    onClick: () => props.setSelect(props.data._id),\n    component: Link,\n    to: \"/select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(motion.div, {\n    variants: imageVariants,\n    transition: transition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: props.data.imageLink,\n    title: \"Contemplative Reptile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontSize: \"1.8rem\"\n    },\n    variant: \"h3\",\n    component: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, props.data.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, \"$ \", props.data.price))))));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: data => dispatch(addToCart(data)),\n    setSelect: id => dispatch(setSelect(id))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SimpleCard);","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Item/Item.js"],"names":["React","makeStyles","CardActionArea","CardMedia","Typography","CardContent","Card","motion","connect","Link","addToCart","setSelect","useStyles","root","backgroundColor","maxWidth","media","height","actionArea","opacity","focusHighlight","transition","duration","ease","thumbnailVariants","initial","scale","enter","exit","frameVariants","hover","imageVariants","SimpleCard","props","classes","console","log","data","_id","imageLink","textAlign","fontSize","name","price","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CardActionArea, CardMedia, Typography, CardContent, Card } from \"@material-ui/core\";\nimport { motion } from \"framer-motion\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { addToCart } from \"../../store/actions/orderActions\";\nimport { setSelect } from \"../../store/actions/products\";\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor: \"#f6f6f6\",\n        maxWidth: 345,\n    },\n    media: {\n        height: 325,\n    },\n    actionArea: {\n        \"&:hover $focusHighlight\": {\n            opacity: 0,\n        },\n    },\n    focusHighlight: {},\n});\n//============= framer =================\nconst transition = { duration: 0.5, ease: [0.43, 0.13, 0.23, 0.96] };\n\nconst thumbnailVariants = {\n    initial: { scale: 0.9, opacity: 0 },\n    enter: { scale: 1, opacity: 1, transition },\n    exit: {\n        scale: 0.5,\n        opacity: 0,\n        transition: { duration: 1.5, ...transition },\n    },\n};\n\nconst frameVariants = {\n    hover: { scale: 0.95 },\n};\n\nconst imageVariants = {\n    hover: { scale: 1.1 },\n};\n\n// ===================\nconst SimpleCard = (props) => {\n    const classes = useStyles();\n    console.log(props.data._id);\n\n    return (\n        <motion.div variants={thumbnailVariants}>\n            <motion.div\n                className=\"frame\"\n                whileHover=\"hover\"\n                variants={frameVariants}\n                transition={transition}\n            >\n                <Card className={classes.root} elevation={0}>\n                    <CardActionArea\n                        disableRipple\n                        disableTouchRipple\n                        classes={{\n                            root: classes.actionArea,\n                            focusHighlight: classes.focusHighlight,\n                        }}\n                        onClick={() => props.setSelect(props.data._id)}\n                        component={Link}\n                        to=\"/select\"\n                    >\n                        <motion.div variants={imageVariants} transition={transition}>\n                            <CardMedia\n                                className={classes.media}\n                                image={props.data.imageLink}\n                                title=\"Contemplative Reptile\"\n                            />\n                        </motion.div>\n\n                        <CardContent style={{ textAlign: \"center\" }}>\n                            <Typography style={{ fontSize: \"1.8rem\" }} variant=\"h3\" component=\"h3\">\n                                {props.data.name}\n                            </Typography>\n                            <Typography\n                                variant=\"subtitle1\"\n                                style={{ fontSize: \"1.5rem\" }}\n                                component=\"p\"\n                            >\n                                $ {props.data.price}\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </motion.div>\n        </motion.div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addToCart: (data) => dispatch(addToCart(data)),\n        setSelect: (id) => dispatch(setSelect(id)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(SimpleCard);\n"]},"metadata":{},"sourceType":"module"}