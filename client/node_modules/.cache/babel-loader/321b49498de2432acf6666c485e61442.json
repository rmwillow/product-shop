{"ast":null,"code":"var types = require('./types');\n\nvar INTS = function () {\n  return [{\n    type: types.RANGE,\n    from: 48,\n    to: 57\n  }];\n};\n\nvar WORDS = function () {\n  return [{\n    type: types.CHAR,\n    value: 95\n  }, {\n    type: types.RANGE,\n    from: 97,\n    to: 122\n  }, {\n    type: types.RANGE,\n    from: 65,\n    to: 90\n  }].concat(INTS());\n};\n\nvar WHITESPACE = function () {\n  return [{\n    type: types.CHAR,\n    value: 9\n  }, {\n    type: types.CHAR,\n    value: 10\n  }, {\n    type: types.CHAR,\n    value: 11\n  }, {\n    type: types.CHAR,\n    value: 12\n  }, {\n    type: types.CHAR,\n    value: 13\n  }, {\n    type: types.CHAR,\n    value: 32\n  }, {\n    type: types.CHAR,\n    value: 160\n  }, {\n    type: types.CHAR,\n    value: 5760\n  }, {\n    type: types.CHAR,\n    value: 6158\n  }, {\n    type: types.CHAR,\n    value: 8192\n  }, {\n    type: types.CHAR,\n    value: 8193\n  }, {\n    type: types.CHAR,\n    value: 8194\n  }, {\n    type: types.CHAR,\n    value: 8195\n  }, {\n    type: types.CHAR,\n    value: 8196\n  }, {\n    type: types.CHAR,\n    value: 8197\n  }, {\n    type: types.CHAR,\n    value: 8198\n  }, {\n    type: types.CHAR,\n    value: 8199\n  }, {\n    type: types.CHAR,\n    value: 8200\n  }, {\n    type: types.CHAR,\n    value: 8201\n  }, {\n    type: types.CHAR,\n    value: 8202\n  }, {\n    type: types.CHAR,\n    value: 8232\n  }, {\n    type: types.CHAR,\n    value: 8233\n  }, {\n    type: types.CHAR,\n    value: 8239\n  }, {\n    type: types.CHAR,\n    value: 8287\n  }, {\n    type: types.CHAR,\n    value: 12288\n  }, {\n    type: types.CHAR,\n    value: 65279\n  }];\n};\n\nvar NOTANYCHAR = function () {\n  return [{\n    type: types.CHAR,\n    value: 10\n  }, {\n    type: types.CHAR,\n    value: 13\n  }, {\n    type: types.CHAR,\n    value: 8232\n  }, {\n    type: types.CHAR,\n    value: 8233\n  }];\n}; // Predefined class objects.\n\n\nexports.words = function () {\n  return {\n    type: types.SET,\n    set: WORDS(),\n    not: false\n  };\n};\n\nexports.notWords = function () {\n  return {\n    type: types.SET,\n    set: WORDS(),\n    not: true\n  };\n};\n\nexports.ints = function () {\n  return {\n    type: types.SET,\n    set: INTS(),\n    not: false\n  };\n};\n\nexports.notInts = function () {\n  return {\n    type: types.SET,\n    set: INTS(),\n    not: true\n  };\n};\n\nexports.whitespace = function () {\n  return {\n    type: types.SET,\n    set: WHITESPACE(),\n    not: false\n  };\n};\n\nexports.notWhitespace = function () {\n  return {\n    type: types.SET,\n    set: WHITESPACE(),\n    not: true\n  };\n};\n\nexports.anyChar = function () {\n  return {\n    type: types.SET,\n    set: NOTANYCHAR(),\n    not: true\n  };\n};","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/ret/lib/sets.js"],"names":["types","require","INTS","type","RANGE","from","to","WORDS","CHAR","value","concat","WHITESPACE","NOTANYCHAR","exports","words","SET","set","not","notWords","ints","notInts","whitespace","notWhitespace","anyChar"],"mappings":"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","sourcesContent":["var types = require('./types');\n\nvar INTS = function() {\n return [{ type: types.RANGE , from: 48, to: 57 }];\n};\n\nvar WORDS = function() {\n return [\n    { type: types.CHAR, value: 95 },\n    { type: types.RANGE, from: 97, to: 122 },\n    { type: types.RANGE, from: 65, to: 90 }\n  ].concat(INTS());\n};\n\nvar WHITESPACE = function() {\n return [\n    { type: types.CHAR, value: 9 },\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 11 },\n    { type: types.CHAR, value: 12 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 32 },\n    { type: types.CHAR, value: 160 },\n    { type: types.CHAR, value: 5760 },\n    { type: types.CHAR, value: 6158 },\n    { type: types.CHAR, value: 8192 },\n    { type: types.CHAR, value: 8193 },\n    { type: types.CHAR, value: 8194 },\n    { type: types.CHAR, value: 8195 },\n    { type: types.CHAR, value: 8196 },\n    { type: types.CHAR, value: 8197 },\n    { type: types.CHAR, value: 8198 },\n    { type: types.CHAR, value: 8199 },\n    { type: types.CHAR, value: 8200 },\n    { type: types.CHAR, value: 8201 },\n    { type: types.CHAR, value: 8202 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n    { type: types.CHAR, value: 8239 },\n    { type: types.CHAR, value: 8287 },\n    { type: types.CHAR, value: 12288 },\n    { type: types.CHAR, value: 65279 }\n  ];\n};\n\nvar NOTANYCHAR = function() {\n  return [\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n  ];\n};\n\n// Predefined class objects.\nexports.words = function() {\n  return { type: types.SET, set: WORDS(), not: false };\n};\n\nexports.notWords = function() {\n  return { type: types.SET, set: WORDS(), not: true };\n};\n\nexports.ints = function() {\n  return { type: types.SET, set: INTS(), not: false };\n};\n\nexports.notInts = function() {\n  return { type: types.SET, set: INTS(), not: true };\n};\n\nexports.whitespace = function() {\n  return { type: types.SET, set: WHITESPACE(), not: false };\n};\n\nexports.notWhitespace = function() {\n  return { type: types.SET, set: WHITESPACE(), not: true };\n};\n\nexports.anyChar = function() {\n  return { type: types.SET, set: NOTANYCHAR(), not: true };\n};\n"]},"metadata":{},"sourceType":"script"}