{"ast":null,"code":"'use strict';\n\nvar isObject = require('is-extendable');\n\nvar union = require('arr-union');\n\nvar get = require('get-value');\n\nvar set = require('set-value');\n\nmodule.exports = function unionValue(obj, prop, value) {\n  if (!isObject(obj)) {\n    throw new TypeError('union-value expects the first argument to be an object.');\n  }\n\n  if (typeof prop !== 'string') {\n    throw new TypeError('union-value expects `prop` to be a string.');\n  }\n\n  var arr = arrayify(get(obj, prop));\n  set(obj, prop, union(arr, arrayify(value)));\n  return obj;\n};\n\nfunction arrayify(val) {\n  if (val === null || typeof val === 'undefined') {\n    return [];\n  }\n\n  if (Array.isArray(val)) {\n    return val;\n  }\n\n  return [val];\n}","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/union-value/index.js"],"names":["isObject","require","union","get","set","module","exports","unionValue","obj","prop","value","TypeError","arr","arrayify","val","Array","isArray"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,WAAD,CAAnB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,WAAD,CAAjB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC;AACrD,MAAI,CAACV,QAAQ,CAACQ,GAAD,CAAb,EAAoB;AAClB,UAAM,IAAIG,SAAJ,CAAc,yDAAd,CAAN;AACD;;AAED,MAAI,OAAOF,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIE,SAAJ,CAAc,4CAAd,CAAN;AACD;;AAED,MAAIC,GAAG,GAAGC,QAAQ,CAACV,GAAG,CAACK,GAAD,EAAMC,IAAN,CAAJ,CAAlB;AACAL,EAAAA,GAAG,CAACI,GAAD,EAAMC,IAAN,EAAYP,KAAK,CAACU,GAAD,EAAMC,QAAQ,CAACH,KAAD,CAAd,CAAjB,CAAH;AACA,SAAOF,GAAP;AACD,CAZD;;AAcA,SAASK,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,MAAIA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,WAAnC,EAAgD;AAC9C,WAAO,EAAP;AACD;;AACD,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACtB,WAAOA,GAAP;AACD;;AACD,SAAO,CAACA,GAAD,CAAP;AACD","sourcesContent":["'use strict';\n\nvar isObject = require('is-extendable');\nvar union = require('arr-union');\nvar get = require('get-value');\nvar set = require('set-value');\n\nmodule.exports = function unionValue(obj, prop, value) {\n  if (!isObject(obj)) {\n    throw new TypeError('union-value expects the first argument to be an object.');\n  }\n\n  if (typeof prop !== 'string') {\n    throw new TypeError('union-value expects `prop` to be a string.');\n  }\n\n  var arr = arrayify(get(obj, prop));\n  set(obj, prop, union(arr, arrayify(value)));\n  return obj;\n};\n\nfunction arrayify(val) {\n  if (val === null || typeof val === 'undefined') {\n    return [];\n  }\n  if (Array.isArray(val)) {\n    return val;\n  }\n  return [val];\n}\n"]},"metadata":{},"sourceType":"script"}