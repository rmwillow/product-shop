{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Modal/Modal.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { connect } from \"react-redux\";\nimport Success from \"../OrderForm/Success/Success\";\nimport OrderForm from \"../OrderForm/OrderForm\";\nimport Cart from \"../Cart/Scart\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"auto\",\n    zIndex: 99\n  },\n  backdrop: {\n    zIndex: \"100\",\n    position: \"fixed\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: \"100%\",\n    height: \"100%\",\n    //backdropFilter: \"saturate(533%) blur(1px)\",\n    backgroundColor: \"#0000006b\"\n  },\n  cartModel: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"flex-end\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    width: \"60%\",\n    height: \"100%\",\n    position: \"relative\"\n  },\n  \"@media only screen and (max-width: 600px)\": {\n    cartModel: {\n      height: props => props.isSubmit ? \"110%\" : \"80%\",\n      margin: 0,\n      width: \"100%\"\n    },\n    root: {\n      display: \"flex\",\n      alignItems: \"flex-end\"\n    }\n  }\n}));\nconst backdrop = {\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 0.5\n    }\n  },\n  hidden: {\n    opacity: 0\n  },\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.5\n    }\n  }\n};\nconst cartVariant = {\n  hidden: {\n    y: \"100%\",\n    transition: {\n      duration: 0.5\n    }\n  },\n  visible: {\n    opacity: 1,\n    zIndex: 500,\n    y: \"0%\",\n    transition: {\n      duration: 0.5\n    }\n  },\n  exit: {\n    opacity: 1,\n    y: \"100%\",\n    transition: {\n      duration: 0.5\n    }\n  }\n};\n\nfunction Modal(props) {\n  const classes = useStyles(props);\n  let x = null;\n\n  if (props.submitted) {\n    x = /*#__PURE__*/React.createElement(Success, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    });\n  } else if (props.isSubmit) {\n    x = /*#__PURE__*/React.createElement(OrderForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    });\n  } else {\n    x = /*#__PURE__*/React.createElement(Cart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    exitBeforeEnter: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, props.show ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(motion.div, {\n    variants: backdrop,\n    initial: \"hidden\",\n    animate: \"visible\",\n    exit: \"exit\",\n    onClick: props.modalHandler,\n    className: classes.backdrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(motion.div, {\n    variants: cartVariant,\n    initial: \"hidden\",\n    animate: \"visible\",\n    exit: \"exit\",\n    className: classes.cartModel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, x)) : null);\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSubmit: state.orders.isSubmit,\n    submitted: state.orders.submitted\n  };\n};\n\nexport default connect(mapStateToProps, null)(Modal);","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Modal/Modal.js"],"names":["React","makeStyles","motion","AnimatePresence","connect","Success","OrderForm","Cart","useStyles","theme","root","position","top","left","width","height","overflow","zIndex","backdrop","bottom","right","backgroundColor","cartModel","display","justifyContent","alignItems","marginLeft","marginRight","props","isSubmit","margin","visible","opacity","transition","duration","hidden","exit","cartVariant","y","Modal","classes","x","submitted","show","modalHandler","mapStateToProps","state","orders"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { connect } from \"react-redux\";\nimport Success from \"../OrderForm/Success/Success\";\nimport OrderForm from \"../OrderForm/OrderForm\";\nimport Cart from \"../Cart/Scart\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        overflow: \"auto\",\n        zIndex: 99,\n    },\n    backdrop: {\n        zIndex: \"100\",\n        position: \"fixed\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        width: \"100%\",\n        height: \"100%\",\n        //backdropFilter: \"saturate(533%) blur(1px)\",\n        backgroundColor: \"#0000006b\",\n    },\n    cartModel: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-end\",\n        marginLeft: \"20%\",\n        marginRight: \"20%\",\n        width: \"60%\",\n        height: \"100%\",\n        position: \"relative\",\n    },\n    \"@media only screen and (max-width: 600px)\": {\n        cartModel: {\n            height: (props) => (props.isSubmit ? \"110%\" : \"80%\"),\n            margin: 0,\n            width: \"100%\",\n        },\n        root: {\n            display: \"flex\",\n            alignItems: \"flex-end\",\n        },\n    },\n}));\n\nconst backdrop = {\n    visible: {\n        opacity: 1,\n        transition: {\n            duration: 0.5,\n        },\n    },\n    hidden: {\n        opacity: 0,\n    },\n    exit: {\n        opacity: 0,\n        transition: {\n            duration: 0.5,\n        },\n    },\n};\n\nconst cartVariant = {\n    hidden: {\n        y: \"100%\",\n        transition: {\n            duration: 0.5,\n        },\n    },\n    visible: {\n        opacity: 1,\n        zIndex: 500,\n        y: \"0%\",\n        transition: {\n            duration: 0.5,\n        },\n    },\n    exit: {\n        opacity: 1,\n        y: \"100%\",\n        transition: {\n            duration: 0.5,\n        },\n    },\n};\n\nfunction Modal(props) {\n    const classes = useStyles(props);\n    let x = null;\n    if (props.submitted) {\n        x = <Success />;\n    } else if (props.isSubmit) {\n        x = <OrderForm />;\n    } else {\n        x = <Cart />;\n    }\n    return (\n        <AnimatePresence exitBeforeEnter>\n            {props.show ? (\n                <div className={classes.root}>\n                    <motion.div\n                        variants={backdrop}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        exit=\"exit\"\n                        onClick={props.modalHandler}\n                        className={classes.backdrop}\n                    />\n                    <motion.div\n                        variants={cartVariant}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        exit=\"exit\"\n                        className={classes.cartModel}\n                    >\n                        {x}\n                    </motion.div>\n                </div>\n            ) : null}\n        </AnimatePresence>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isSubmit: state.orders.isSubmit,\n        submitted: state.orders.submitted,\n    };\n};\nexport default connect(mapStateToProps, null)(Modal);\n"]},"metadata":{},"sourceType":"module"}