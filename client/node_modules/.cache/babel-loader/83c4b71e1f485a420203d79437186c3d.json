{"ast":null,"code":"import _toConsumableArray from\"/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import ExpansionPanel from\"@material-ui/core/ExpansionPanel\";import ExpansionPanelSummary from\"@material-ui/core/ExpansionPanelSummary\";import ExpansionPanelDetails from\"@material-ui/core/ExpansionPanelDetails\";import Typography from\"@material-ui/core/Typography\";import ExpandMoreIcon from\"@material-ui/icons/ExpandMore\";import ListItem from\"@material-ui/core/ListItem\";import ListItemIcon from\"@material-ui/core/ListItemIcon\";import ListItemText from\"@material-ui/core/ListItemText\";import InboxIcon from\"@material-ui/icons/MoveToInbox\";import{connect}from\"react-redux\";import*as actions from\"../../../store/actions/products\";var useStyles=makeStyles(function(theme){return{root:{width:\"100%\"},heading:{fontSize:theme.typography.pxToRem(15),fontWeight:theme.typography.fontWeightRegular}};});function BrandList(props){var classes=useStyles();var array=[{brand:\"Loading..\"}];if(props.items==null){array=[{brand:\"Loading..\"}];}else{array=props.items;}var distinctBrands=_toConsumableArray(new Set(array.map(function(x){return x.brand;})));return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(ExpansionPanel,null,/*#__PURE__*/React.createElement(ExpansionPanelSummary,{expandIcon:/*#__PURE__*/React.createElement(ExpandMoreIcon,null),\"aria-controls\":\"panel1a-content\",id:\"panel1a-header\"},/*#__PURE__*/React.createElement(Typography,{className:classes.heading},\"Brands\")),/*#__PURE__*/React.createElement(ExpansionPanelDetails,null,/*#__PURE__*/React.createElement(\"div\",null,distinctBrands?distinctBrands.map(function(x){return/*#__PURE__*/React.createElement(ListItem,{button:true,onClick:function onClick(){return props.setBrand(x);},key:x},/*#__PURE__*/React.createElement(ListItemIcon,null,/*#__PURE__*/React.createElement(InboxIcon,null)),/*#__PURE__*/React.createElement(ListItemText,{primary:x}));}):null))));}var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setBrand:function setBrand(brand){return dispatch(actions.setBrand(brand));}};};export default connect(null,mapDispatchToProps)(BrandList);","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Nav/Categories/BrandList.js"],"names":["React","makeStyles","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","ExpandMoreIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","connect","actions","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","BrandList","props","classes","array","brand","items","distinctBrands","Set","map","x","setBrand","mapDispatchToProps","dispatch"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yCAAlC,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yCAAlC,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,iCAAzB,CACA,GAAMC,CAAAA,SAAS,CAAGZ,UAAU,CAAC,SAACa,KAAD,QAAY,CACrCC,IAAI,CAAE,CACFC,KAAK,CAAE,MADL,CAD+B,CAIrCC,OAAO,CAAE,CACLC,QAAQ,CAAEJ,KAAK,CAACK,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADL,CAELC,UAAU,CAAEP,KAAK,CAACK,UAAN,CAAiBG,iBAFxB,CAJ4B,CAAZ,EAAD,CAA5B,CAUA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACtB,GAAMC,CAAAA,OAAO,CAAGZ,SAAS,EAAzB,CACA,GAAIa,CAAAA,KAAK,CAAG,CACR,CACIC,KAAK,CAAE,WADX,CADQ,CAAZ,CAKA,GAAIH,KAAK,CAACI,KAAN,EAAe,IAAnB,CAAyB,CACrBF,KAAK,CAAG,CACJ,CACIC,KAAK,CAAE,WADX,CADI,CAAR,CAKH,CAND,IAMO,CACHD,KAAK,CAAGF,KAAK,CAACI,KAAd,CACH,CACD,GAAMC,CAAAA,cAAc,oBAAO,GAAIC,CAAAA,GAAJ,CAAQJ,KAAK,CAACK,GAAN,CAAU,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACL,KAAT,EAAV,CAAR,CAAP,CAApB,CACA,mBACI,2BAAK,SAAS,CAAEF,OAAO,CAACV,IAAxB,eACI,oBAAC,cAAD,mBACI,oBAAC,qBAAD,EACI,UAAU,cAAE,oBAAC,cAAD,MADhB,CAEI,gBAAc,iBAFlB,CAGI,EAAE,CAAC,gBAHP,eAKI,oBAAC,UAAD,EAAY,SAAS,CAAEU,OAAO,CAACR,OAA/B,WALJ,CADJ,cAQI,oBAAC,qBAAD,mBACI,+BACKY,cAAc,CACTA,cAAc,CAACE,GAAf,CAAmB,SAAUC,CAAV,CAAa,CAC5B,mBACI,oBAAC,QAAD,EAAU,MAAM,KAAhB,CAAiB,OAAO,CAAE,yBAAMR,CAAAA,KAAK,CAACS,QAAN,CAAeD,CAAf,CAAN,EAA1B,CAAmD,GAAG,CAAEA,CAAxD,eACI,oBAAC,YAAD,mBACI,oBAAC,SAAD,MADJ,CADJ,cAII,oBAAC,YAAD,EAAc,OAAO,CAAEA,CAAvB,EAJJ,CADJ,CAQH,CATD,CADS,CAWT,IAZV,CADJ,CARJ,CADJ,CADJ,CA6BH,CAED,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAO,CACHF,QAAQ,CAAE,kBAACN,KAAD,QAAWQ,CAAAA,QAAQ,CAACvB,OAAO,CAACqB,QAAR,CAAiBN,KAAjB,CAAD,CAAnB,EADP,CAAP,CAGH,CAJD,CAMA,cAAehB,CAAAA,OAAO,CAAC,IAAD,CAAOuB,kBAAP,CAAP,CAAkCX,SAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/products\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\nfunction BrandList(props) {\n    const classes = useStyles();\n    let array = [\n        {\n            brand: \"Loading..\",\n        },\n    ];\n    if (props.items == null) {\n        array = [\n            {\n                brand: \"Loading..\",\n            },\n        ];\n    } else {\n        array = props.items;\n    }\n    const distinctBrands = [...new Set(array.map((x) => x.brand))];\n    return (\n        <div className={classes.root}>\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography className={classes.heading}>Brands</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <div>\n                        {distinctBrands\n                            ? distinctBrands.map(function (x) {\n                                  return (\n                                      <ListItem button onClick={() => props.setBrand(x)} key={x}>\n                                          <ListItemIcon>\n                                              <InboxIcon />\n                                          </ListItemIcon>\n                                          <ListItemText primary={x} />\n                                      </ListItem>\n                                  );\n                              })\n                            : null}\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setBrand: (brand) => dispatch(actions.setBrand(brand)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(BrandList);\n"]},"metadata":{},"sourceType":"module"}