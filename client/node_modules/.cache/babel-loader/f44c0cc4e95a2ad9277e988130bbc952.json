{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Nav/Categories/BrandList.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/products\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\nfunction BrandList(props) {\n  const classes = useStyles();\n  let array = [{\n    brand: \"Loading..\"\n  }];\n\n  if (props.items == null) {\n    array = [{\n      brand: \"Loading..\"\n    }];\n  } else {\n    array = props.items;\n  }\n\n  const distinctBrands = [...new Set(array.map(x => x.brand))];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ExpansionPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Brands\")), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, distinctBrands ? distinctBrands.map(function (x) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: () => props.setBrand(x),\n      key: x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(InboxIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 47\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 43\n      }\n    }));\n  }) : null))));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setBrand: brand => dispatch(actions.setBrand(brand))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(BrandList);","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Nav/Categories/BrandList.js"],"names":["React","makeStyles","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","ExpandMoreIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","connect","actions","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","BrandList","props","classes","array","brand","items","distinctBrands","Set","map","x","setBrand","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/products\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\nfunction BrandList(props) {\n    const classes = useStyles();\n    let array = [\n        {\n            brand: \"Loading..\",\n        },\n    ];\n    if (props.items == null) {\n        array = [\n            {\n                brand: \"Loading..\",\n            },\n        ];\n    } else {\n        array = props.items;\n    }\n    const distinctBrands = [...new Set(array.map((x) => x.brand))];\n    return (\n        <div className={classes.root}>\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography className={classes.heading}>Brands</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <div>\n                        {distinctBrands\n                            ? distinctBrands.map(function (x) {\n                                  return (\n                                      <ListItem button onClick={() => props.setBrand(x)} key={x}>\n                                          <ListItemIcon>\n                                              <InboxIcon />\n                                          </ListItemIcon>\n                                          <ListItemText primary={x} />\n                                      </ListItem>\n                                  );\n                              })\n                            : null}\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setBrand: (brand) => dispatch(actions.setBrand(brand)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(BrandList);\n"]},"metadata":{},"sourceType":"module"}