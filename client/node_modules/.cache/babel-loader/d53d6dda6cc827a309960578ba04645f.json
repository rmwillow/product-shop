{"ast":null,"code":"var _ = require('lodash');\n\nvar logger = require('./logger.js').getInstance();\n\nmodule.exports = {\n  getTarget: getTarget\n};\n\nfunction getTarget(req, config) {\n  var newTarget;\n  var router = config.router;\n\n  if (_.isPlainObject(router)) {\n    newTarget = getTargetFromProxyTable(req, router);\n  } else if (_.isFunction(router)) {\n    newTarget = router(req);\n  }\n\n  return newTarget;\n}\n\nfunction getTargetFromProxyTable(req, table) {\n  var result;\n  var host = req.headers.host;\n  var path = req.url;\n  var hostAndPath = host + path;\n\n  _.forIn(table, function (value, key) {\n    if (containsPath(key)) {\n      if (hostAndPath.indexOf(key) > -1) {\n        // match 'localhost:3000/api'\n        result = table[key];\n        logger.debug('[HPM] Router table match: \"%s\"', key);\n        return false;\n      }\n    } else {\n      if (key === host) {\n        // match 'localhost:3000'\n        result = table[key];\n        logger.debug('[HPM] Router table match: \"%s\"', host);\n        return false;\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction containsPath(v) {\n  return v.indexOf('/') > -1;\n}","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/http-proxy-middleware/lib/router.js"],"names":["_","require","logger","getInstance","module","exports","getTarget","req","config","newTarget","router","isPlainObject","getTargetFromProxyTable","isFunction","table","result","host","headers","path","url","hostAndPath","forIn","value","key","containsPath","indexOf","debug","v"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBE,WAAvB,EAAb;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,SAAS,EAAEA;AADI,CAAjB;;AAIA,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,MAAxB,EAAgC;AAC9B,MAAIC,SAAJ;AACA,MAAIC,MAAM,GAAGF,MAAM,CAACE,MAApB;;AAEA,MAAIV,CAAC,CAACW,aAAF,CAAgBD,MAAhB,CAAJ,EAA6B;AAC3BD,IAAAA,SAAS,GAAGG,uBAAuB,CAACL,GAAD,EAAMG,MAAN,CAAnC;AACD,GAFD,MAEO,IAAIV,CAAC,CAACa,UAAF,CAAaH,MAAb,CAAJ,EAA0B;AAC/BD,IAAAA,SAAS,GAAGC,MAAM,CAACH,GAAD,CAAlB;AACD;;AAED,SAAOE,SAAP;AACD;;AAED,SAASG,uBAAT,CAAiCL,GAAjC,EAAsCO,KAAtC,EAA6C;AAC3C,MAAIC,MAAJ;AACA,MAAIC,IAAI,GAAGT,GAAG,CAACU,OAAJ,CAAYD,IAAvB;AACA,MAAIE,IAAI,GAAGX,GAAG,CAACY,GAAf;AAEA,MAAIC,WAAW,GAAGJ,IAAI,GAAGE,IAAzB;;AAEAlB,EAAAA,CAAC,CAACqB,KAAF,CAAQP,KAAR,EAAe,UAASQ,KAAT,EAAgBC,GAAhB,EAAqB;AAClC,QAAIC,YAAY,CAACD,GAAD,CAAhB,EAAuB;AACrB,UAAIH,WAAW,CAACK,OAAZ,CAAoBF,GAApB,IAA2B,CAAC,CAAhC,EAAmC;AACjC;AACAR,QAAAA,MAAM,GAAGD,KAAK,CAACS,GAAD,CAAd;AACArB,QAAAA,MAAM,CAACwB,KAAP,CAAa,gCAAb,EAA+CH,GAA/C;AACA,eAAO,KAAP;AACD;AACF,KAPD,MAOO;AACL,UAAIA,GAAG,KAAKP,IAAZ,EAAkB;AAChB;AACAD,QAAAA,MAAM,GAAGD,KAAK,CAACS,GAAD,CAAd;AACArB,QAAAA,MAAM,CAACwB,KAAP,CAAa,gCAAb,EAA+CV,IAA/C;AACA,eAAO,KAAP;AACD;AACF;AACF,GAhBD;;AAkBA,SAAOD,MAAP;AACD;;AAED,SAASS,YAAT,CAAsBG,CAAtB,EAAyB;AACvB,SAAOA,CAAC,CAACF,OAAF,CAAU,GAAV,IAAiB,CAAC,CAAzB;AACD","sourcesContent":["var _ = require('lodash')\nvar logger = require('./logger.js').getInstance()\n\nmodule.exports = {\n  getTarget: getTarget\n}\n\nfunction getTarget(req, config) {\n  var newTarget\n  var router = config.router\n\n  if (_.isPlainObject(router)) {\n    newTarget = getTargetFromProxyTable(req, router)\n  } else if (_.isFunction(router)) {\n    newTarget = router(req)\n  }\n\n  return newTarget\n}\n\nfunction getTargetFromProxyTable(req, table) {\n  var result\n  var host = req.headers.host\n  var path = req.url\n\n  var hostAndPath = host + path\n\n  _.forIn(table, function(value, key) {\n    if (containsPath(key)) {\n      if (hostAndPath.indexOf(key) > -1) {\n        // match 'localhost:3000/api'\n        result = table[key]\n        logger.debug('[HPM] Router table match: \"%s\"', key)\n        return false\n      }\n    } else {\n      if (key === host) {\n        // match 'localhost:3000'\n        result = table[key]\n        logger.debug('[HPM] Router table match: \"%s\"', host)\n        return false\n      }\n    }\n  })\n\n  return result\n}\n\nfunction containsPath(v) {\n  return v.indexOf('/') > -1\n}\n"]},"metadata":{},"sourceType":"script"}