{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Size_selctor/Selector.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectSize } from \"../../store/actions/orderActions\";\nimport \"./style.css\";\n\nclass Selector extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      size: this.props.product.sizes\n    };\n\n    this.changeHandler = event => {\n      this.props.selectSize(event.target.value);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio-toolbar\",\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, this.state.size.map(x => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: x.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"radioApple\",\n        name: \"radioFruit\",\n        value: x,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"radioApple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }\n      }, x));\n    }));\n  }\n\n}\n\nconst mapDispatchToProp = dispatch => {\n  return {\n    selectSize: size => dispatch(selectSize(size))\n  };\n};\n\nexport default connect(null, mapDispatchToProp)(Selector);","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Size_selctor/Selector.js"],"names":["React","Component","connect","selectSize","Selector","state","size","props","product","sizes","changeHandler","event","target","value","render","map","x","mapDispatchToProp","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,OAAO,aAAP;;AACA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BI,KAD6B,GACrB;AACJC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmBC;AADrB,KADqB;;AAAA,SAI7BC,aAJ6B,GAIZC,KAAD,IAAW;AACvB,WAAKJ,KAAL,CAAWJ,UAAX,CAAsBQ,KAAK,CAACC,MAAN,CAAaC,KAAnC;AACH,KAN4B;AAAA;;AAO7BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,QAAQ,EAAE,KAAKJ,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWC,IAAX,CAAgBS,GAAhB,CAAqBC,CAAD,IAAO;AACxB,0BACI,oBAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,EAAEA,CAAC,CAACH,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAC,YAAvB;AAAoC,QAAA,IAAI,EAAC,YAAzC;AAAsD,QAAA,KAAK,EAAEG,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAO,QAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBA,CAAzB,CAFJ,CADJ;AAMH,KAPA,CADL,CADJ;AAYH;;AApB4B;;AAuBjC,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACpC,SAAO;AACHf,IAAAA,UAAU,EAAGG,IAAD,IAAUY,QAAQ,CAACf,UAAU,CAACG,IAAD,CAAX;AAD3B,GAAP;AAGH,CAJD;;AAMA,eAAeJ,OAAO,CAAC,IAAD,EAAOe,iBAAP,CAAP,CAAiCb,QAAjC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectSize } from \"../../store/actions/orderActions\";\nimport \"./style.css\";\nclass Selector extends Component {\n    state = {\n        size: this.props.product.sizes,\n    };\n    changeHandler = (event) => {\n        this.props.selectSize(event.target.value);\n    };\n    render() {\n        return (\n            <div className=\"radio-toolbar\" onChange={this.changeHandler}>\n                {this.state.size.map((x) => {\n                    return (\n                        <React.Fragment key={x.value}>\n                            <input type=\"radio\" id=\"radioApple\" name=\"radioFruit\" value={x} />\n                            <label for=\"radioApple\">{x}</label>\n                        </React.Fragment>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProp = (dispatch) => {\n    return {\n        selectSize: (size) => dispatch(selectSize(size)),\n    };\n};\n\nexport default connect(null, mapDispatchToProp)(Selector);\n"]},"metadata":{},"sourceType":"module"}