{"ast":null,"code":"/*!\n * pascalcase <https://github.com/jonschlinkert/pascalcase>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\nfunction pascalcase(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string.');\n  }\n\n  str = str.replace(/([A-Z])/g, ' $1');\n\n  if (str.length === 1) {\n    return str.toUpperCase();\n  }\n\n  str = str.replace(/^[\\W_]+|[\\W_]+$/g, '').toLowerCase();\n  str = str.charAt(0).toUpperCase() + str.slice(1);\n  return str.replace(/[\\W_]+(\\w|$)/g, function (_, ch) {\n    return ch.toUpperCase();\n  });\n}\n\nmodule.exports = pascalcase;","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/pascalcase/index.js"],"names":["pascalcase","str","TypeError","replace","length","toUpperCase","toLowerCase","charAt","slice","_","ch","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AACvB,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIC,SAAJ,CAAc,oBAAd,CAAN;AACD;;AACDD,EAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,UAAZ,EAAwB,KAAxB,CAAN;;AACA,MAAIF,GAAG,CAACG,MAAJ,KAAe,CAAnB,EAAsB;AAAE,WAAOH,GAAG,CAACI,WAAJ,EAAP;AAA2B;;AACnDJ,EAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,kBAAZ,EAAgC,EAAhC,EAAoCG,WAApC,EAAN;AACAL,EAAAA,GAAG,GAAGA,GAAG,CAACM,MAAJ,CAAW,CAAX,EAAcF,WAAd,KAA8BJ,GAAG,CAACO,KAAJ,CAAU,CAAV,CAApC;AACA,SAAOP,GAAG,CAACE,OAAJ,CAAY,eAAZ,EAA6B,UAAUM,CAAV,EAAaC,EAAb,EAAiB;AACnD,WAAOA,EAAE,CAACL,WAAH,EAAP;AACD,GAFM,CAAP;AAGD;;AAEDM,MAAM,CAACC,OAAP,GAAiBZ,UAAjB","sourcesContent":["/*!\n * pascalcase <https://github.com/jonschlinkert/pascalcase>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nfunction pascalcase(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string.');\n  }\n  str = str.replace(/([A-Z])/g, ' $1');\n  if (str.length === 1) { return str.toUpperCase(); }\n  str = str.replace(/^[\\W_]+|[\\W_]+$/g, '').toLowerCase();\n  str = str.charAt(0).toUpperCase() + str.slice(1);\n  return str.replace(/[\\W_]+(\\w|$)/g, function (_, ch) {\n    return ch.toUpperCase();\n  });\n}\n\nmodule.exports = pascalcase;\n"]},"metadata":{},"sourceType":"script"}