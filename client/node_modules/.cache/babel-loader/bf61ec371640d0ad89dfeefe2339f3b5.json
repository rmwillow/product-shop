{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar union = require('arr-union');\n\nvar define = require('define-property');\n\nvar staticExtend = require('static-extend');\n\nvar isObj = require('isobject');\n/**\n * Expose class utils\n */\n\n\nvar cu = module.exports;\n/**\n * Expose class utils: `cu`\n */\n\ncu.isObject = function isObject(val) {\n  return isObj(val) || typeof val === 'function';\n};\n/**\n * Returns true if an array has any of the given elements, or an\n * object has any of the give keys.\n *\n * ```js\n * cu.has(['a', 'b', 'c'], 'c');\n * //=> true\n *\n * cu.has(['a', 'b', 'c'], ['c', 'z']);\n * //=> true\n *\n * cu.has({a: 'b', c: 'd'}, ['c', 'z']);\n * //=> true\n * ```\n * @param {Object} `obj`\n * @param {String|Array} `val`\n * @return {Boolean}\n * @api public\n */\n\n\ncu.has = function has(obj, val) {\n  val = cu.arrayify(val);\n  var len = val.length;\n\n  if (cu.isObject(obj)) {\n    for (var key in obj) {\n      if (val.indexOf(key) > -1) {\n        return true;\n      }\n    }\n\n    var keys = cu.nativeKeys(obj);\n    return cu.has(keys, val);\n  }\n\n  if (Array.isArray(obj)) {\n    var arr = obj;\n\n    while (len--) {\n      if (arr.indexOf(val[len]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  throw new TypeError('expected an array or object.');\n};\n/**\n * Returns true if an array or object has all of the given values.\n *\n * ```js\n * cu.hasAll(['a', 'b', 'c'], 'c');\n * //=> true\n *\n * cu.hasAll(['a', 'b', 'c'], ['c', 'z']);\n * //=> false\n *\n * cu.hasAll({a: 'b', c: 'd'}, ['c', 'z']);\n * //=> false\n * ```\n * @param {Object|Array} `val`\n * @param {String|Array} `values`\n * @return {Boolean}\n * @api public\n */\n\n\ncu.hasAll = function hasAll(val, values) {\n  values = cu.arrayify(values);\n  var len = values.length;\n\n  while (len--) {\n    if (!cu.has(val, values[len])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Cast the given value to an array.\n *\n * ```js\n * cu.arrayify('foo');\n * //=> ['foo']\n *\n * cu.arrayify(['foo']);\n * //=> ['foo']\n * ```\n *\n * @param {String|Array} `val`\n * @return {Array}\n * @api public\n */\n\n\ncu.arrayify = function arrayify(val) {\n  return val ? Array.isArray(val) ? val : [val] : [];\n};\n/**\n * Noop\n */\n\n\ncu.noop = function noop() {\n  return;\n};\n/**\n * Returns the first argument passed to the function.\n */\n\n\ncu.identity = function identity(val) {\n  return val;\n};\n/**\n * Returns true if a value has a `contructor`\n *\n * ```js\n * cu.hasConstructor({});\n * //=> true\n *\n * cu.hasConstructor(Object.create(null));\n * //=> false\n * ```\n * @param  {Object} `value`\n * @return {Boolean}\n * @api public\n */\n\n\ncu.hasConstructor = function hasConstructor(val) {\n  return cu.isObject(val) && typeof val.constructor !== 'undefined';\n};\n/**\n * Get the native `ownPropertyNames` from the constructor of the\n * given `object`. An empty array is returned if the object does\n * not have a constructor.\n *\n * ```js\n * cu.nativeKeys({a: 'b', b: 'c', c: 'd'})\n * //=> ['a', 'b', 'c']\n *\n * cu.nativeKeys(function(){})\n * //=> ['length', 'caller']\n * ```\n *\n * @param  {Object} `obj` Object that has a `constructor`.\n * @return {Array} Array of keys.\n * @api public\n */\n\n\ncu.nativeKeys = function nativeKeys(val) {\n  if (!cu.hasConstructor(val)) return [];\n  var keys = Object.getOwnPropertyNames(val);\n  if ('caller' in val) keys.push('caller');\n  return keys;\n};\n/**\n * Returns property descriptor `key` if it's an \"own\" property\n * of the given object.\n *\n * ```js\n * function App() {}\n * Object.defineProperty(App.prototype, 'count', {\n *   get: function() {\n *     return Object.keys(this).length;\n *   }\n * });\n * cu.getDescriptor(App.prototype, 'count');\n * // returns:\n * // {\n * //   get: [Function],\n * //   set: undefined,\n * //   enumerable: false,\n * //   configurable: false\n * // }\n * ```\n *\n * @param {Object} `obj`\n * @param {String} `key`\n * @return {Object} Returns descriptor `key`\n * @api public\n */\n\n\ncu.getDescriptor = function getDescriptor(obj, key) {\n  if (!cu.isObject(obj)) {\n    throw new TypeError('expected an object.');\n  }\n\n  if (typeof key !== 'string') {\n    throw new TypeError('expected key to be a string.');\n  }\n\n  return Object.getOwnPropertyDescriptor(obj, key);\n};\n/**\n * Copy a descriptor from one object to another.\n *\n * ```js\n * function App() {}\n * Object.defineProperty(App.prototype, 'count', {\n *   get: function() {\n *     return Object.keys(this).length;\n *   }\n * });\n * var obj = {};\n * cu.copyDescriptor(obj, App.prototype, 'count');\n * ```\n * @param {Object} `receiver`\n * @param {Object} `provider`\n * @param {String} `name`\n * @return {Object}\n * @api public\n */\n\n\ncu.copyDescriptor = function copyDescriptor(receiver, provider, name) {\n  if (!cu.isObject(receiver)) {\n    throw new TypeError('expected receiving object to be an object.');\n  }\n\n  if (!cu.isObject(provider)) {\n    throw new TypeError('expected providing object to be an object.');\n  }\n\n  if (typeof name !== 'string') {\n    throw new TypeError('expected name to be a string.');\n  }\n\n  var val = cu.getDescriptor(provider, name);\n  if (val) Object.defineProperty(receiver, name, val);\n};\n/**\n * Copy static properties, prototype properties, and descriptors\n * from one object to another.\n *\n * @param {Object} `receiver`\n * @param {Object} `provider`\n * @param {String|Array} `omit` One or more properties to omit\n * @return {Object}\n * @api public\n */\n\n\ncu.copy = function copy(receiver, provider, omit) {\n  if (!cu.isObject(receiver)) {\n    throw new TypeError('expected receiving object to be an object.');\n  }\n\n  if (!cu.isObject(provider)) {\n    throw new TypeError('expected providing object to be an object.');\n  }\n\n  var props = Object.getOwnPropertyNames(provider);\n  var keys = Object.keys(provider);\n  var len = props.length,\n      key;\n  omit = cu.arrayify(omit);\n\n  while (len--) {\n    key = props[len];\n\n    if (cu.has(keys, key)) {\n      define(receiver, key, provider[key]);\n    } else if (!(key in receiver) && !cu.has(omit, key)) {\n      cu.copyDescriptor(receiver, provider, key);\n    }\n  }\n};\n/**\n * Inherit the static properties, prototype properties, and descriptors\n * from of an object.\n *\n * @param {Object} `receiver`\n * @param {Object} `provider`\n * @param {String|Array} `omit` One or more properties to omit\n * @return {Object}\n * @api public\n */\n\n\ncu.inherit = function inherit(receiver, provider, omit) {\n  if (!cu.isObject(receiver)) {\n    throw new TypeError('expected receiving object to be an object.');\n  }\n\n  if (!cu.isObject(provider)) {\n    throw new TypeError('expected providing object to be an object.');\n  }\n\n  var keys = [];\n\n  for (var key in provider) {\n    keys.push(key);\n    receiver[key] = provider[key];\n  }\n\n  keys = keys.concat(cu.arrayify(omit));\n  var a = provider.prototype || provider;\n  var b = receiver.prototype || receiver;\n  cu.copy(b, a, keys);\n};\n/**\n * Returns a function for extending the static properties,\n * prototype properties, and descriptors from the `Parent`\n * constructor onto `Child` constructors.\n *\n * ```js\n * var extend = cu.extend(Parent);\n * Parent.extend(Child);\n *\n * // optional methods\n * Parent.extend(Child, {\n *   foo: function() {},\n *   bar: function() {}\n * });\n * ```\n * @param {Function} `Parent` Parent ctor\n * @param {Function} `extend` Optional extend function to handle custom extensions. Useful when updating methods that require a specific prototype.\n *   @param {Function} `Child` Child ctor\n *   @param {Object} `proto` Optionally pass additional prototype properties to inherit.\n *   @return {Object}\n * @api public\n */\n\n\ncu.extend = function () {\n  // keep it lazy, instead of assigning to `cu.extend`\n  return staticExtend.apply(null, arguments);\n};\n/**\n * Bubble up events emitted from static methods on the Parent ctor.\n *\n * @param {Object} `Parent`\n * @param {Array} `events` Event names to bubble up\n * @api public\n */\n\n\ncu.bubble = function (Parent, events) {\n  events = events || [];\n\n  Parent.bubble = function (Child, arr) {\n    if (Array.isArray(arr)) {\n      events = union([], events, arr);\n    }\n\n    var len = events.length;\n    var idx = -1;\n\n    while (++idx < len) {\n      var name = events[idx];\n      Parent.on(name, Child.emit.bind(Child, name));\n    }\n\n    cu.bubble(Child, events);\n  };\n};","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/class-utils/index.js"],"names":["util","require","union","define","staticExtend","isObj","cu","module","exports","isObject","val","has","obj","arrayify","len","length","key","indexOf","keys","nativeKeys","Array","isArray","arr","TypeError","hasAll","values","noop","identity","hasConstructor","constructor","Object","getOwnPropertyNames","push","getDescriptor","getOwnPropertyDescriptor","copyDescriptor","receiver","provider","name","defineProperty","copy","omit","props","inherit","concat","a","prototype","b","extend","apply","arguments","bubble","Parent","events","Child","idx","on","emit","bind"],"mappings":"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","sourcesContent":["'use strict';\n\nvar util = require('util');\nvar union = require('arr-union');\nvar define = require('define-property');\nvar staticExtend = require('static-extend');\nvar isObj = require('isobject');\n\n/**\n * Expose class utils\n */\n\nvar cu = module.exports;\n\n/**\n * Expose class utils: `cu`\n */\n\ncu.isObject = function isObject(val) {\n  return isObj(val) || typeof val === 'function';\n};\n\n/**\n * Returns true if an array has any of the given elements, or an\n * object has any of the give keys.\n *\n * ```js\n * cu.has(['a', 'b', 'c'], 'c');\n * //=> true\n *\n * cu.has(['a', 'b', 'c'], ['c', 'z']);\n * //=> true\n *\n * cu.has({a: 'b', c: 'd'}, ['c', 'z']);\n * //=> true\n * ```\n * @param {Object} `obj`\n * @param {String|Array} `val`\n * @return {Boolean}\n * @api public\n */\n\ncu.has = function has(obj, val) {\n  val = cu.arrayify(val);\n  var len = val.length;\n\n  if (cu.isObject(obj)) {\n    for (var key in obj) {\n      if (val.indexOf(key) > -1) {\n        return true;\n      }\n    }\n\n    var keys = cu.nativeKeys(obj);\n    return cu.has(keys, val);\n  }\n\n  if (Array.isArray(obj)) {\n    var arr = obj;\n    while (len--) {\n      if (arr.indexOf(val[len]) > -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  throw new TypeError('expected an array or object.');\n};\n\n/**\n * Returns true if an array or object has all of the given values.\n *\n * ```js\n * cu.hasAll(['a', 'b', 'c'], 'c');\n * //=> true\n *\n * cu.hasAll(['a', 'b', 'c'], ['c', 'z']);\n * //=> false\n *\n * cu.hasAll({a: 'b', c: 'd'}, ['c', 'z']);\n * //=> false\n * ```\n * @param {Object|Array} `val`\n * @param {String|Array} `values`\n * @return {Boolean}\n * @api public\n */\n\ncu.hasAll = function hasAll(val, values) {\n  values = cu.arrayify(values);\n  var len = values.length;\n  while (len--) {\n    if (!cu.has(val, values[len])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Cast the given value to an array.\n *\n * ```js\n * cu.arrayify('foo');\n * //=> ['foo']\n *\n * cu.arrayify(['foo']);\n * //=> ['foo']\n * ```\n *\n * @param {String|Array} `val`\n * @return {Array}\n * @api public\n */\n\ncu.arrayify = function arrayify(val) {\n  return val ? (Array.isArray(val) ? val : [val]) : [];\n};\n\n/**\n * Noop\n */\n\ncu.noop = function noop() {\n  return;\n};\n\n/**\n * Returns the first argument passed to the function.\n */\n\ncu.identity = function identity(val) {\n  return val;\n};\n\n/**\n * Returns true if a value has a `contructor`\n *\n * ```js\n * cu.hasConstructor({});\n * //=> true\n *\n * cu.hasConstructor(Object.create(null));\n * //=> false\n * ```\n * @param  {Object} `value`\n * @return {Boolean}\n * @api public\n */\n\ncu.hasConstructor = function hasConstructor(val) {\n  return cu.isObject(val) && typeof val.constructor !== 'undefined';\n};\n\n/**\n * Get the native `ownPropertyNames` from the constructor of the\n * given `object`. An empty array is returned if the object does\n * not have a constructor.\n *\n * ```js\n * cu.nativeKeys({a: 'b', b: 'c', c: 'd'})\n * //=> ['a', 'b', 'c']\n *\n * cu.nativeKeys(function(){})\n * //=> ['length', 'caller']\n * ```\n *\n * @param  {Object} `obj` Object that has a `constructor`.\n * @return {Array} Array of keys.\n * @api public\n */\n\ncu.nativeKeys = function nativeKeys(val) {\n  if (!cu.hasConstructor(val)) return [];\n  var keys = Object.getOwnPropertyNames(val);\n  if ('caller' in val) keys.push('caller');\n  return keys;\n};\n\n/**\n * Returns property descriptor `key` if it's an \"own\" property\n * of the given object.\n *\n * ```js\n * function App() {}\n * Object.defineProperty(App.prototype, 'count', {\n *   get: function() {\n *     return Object.keys(this).length;\n *   }\n * });\n * cu.getDescriptor(App.prototype, 'count');\n * // returns:\n * // {\n * //   get: [Function],\n * //   set: undefined,\n * //   enumerable: false,\n * //   configurable: false\n * // }\n * ```\n *\n * @param {Object} `obj`\n * @param {String} `key`\n * @return {Object} Returns descriptor `key`\n * @api public\n */\n\ncu.getDescriptor = function getDescriptor(obj, key) {\n  if (!cu.isObject(obj)) {\n    throw new TypeError('expected an object.');\n  }\n  if (typeof key !== 'string') {\n    throw new TypeError('expected key to be a string.');\n  }\n  return Object.getOwnPropertyDescriptor(obj, key);\n};\n\n/**\n * Copy a descriptor from one object to another.\n *\n * ```js\n * function App() {}\n * Object.defineProperty(App.prototype, 'count', {\n *   get: function() {\n *     return Object.keys(this).length;\n *   }\n * });\n * var obj = {};\n * cu.copyDescriptor(obj, App.prototype, 'count');\n * ```\n * @param {Object} `receiver`\n * @param {Object} `provider`\n * @param {String} `name`\n * @return {Object}\n * @api public\n */\n\ncu.copyDescriptor = function copyDescriptor(receiver, provider, name) {\n  if (!cu.isObject(receiver)) {\n    throw new TypeError('expected receiving object to be an object.');\n  }\n  if (!cu.isObject(provider)) {\n    throw new TypeError('expected providing object to be an object.');\n  }\n  if (typeof name !== 'string') {\n    throw new TypeError('expected name to be a string.');\n  }\n\n  var val = cu.getDescriptor(provider, name);\n  if (val) Object.defineProperty(receiver, name, val);\n};\n\n/**\n * Copy static properties, prototype properties, and descriptors\n * from one object to another.\n *\n * @param {Object} `receiver`\n * @param {Object} `provider`\n * @param {String|Array} `omit` One or more properties to omit\n * @return {Object}\n * @api public\n */\n\ncu.copy = function copy(receiver, provider, omit) {\n  if (!cu.isObject(receiver)) {\n    throw new TypeError('expected receiving object to be an object.');\n  }\n  if (!cu.isObject(provider)) {\n    throw new TypeError('expected providing object to be an object.');\n  }\n  var props = Object.getOwnPropertyNames(provider);\n  var keys = Object.keys(provider);\n  var len = props.length,\n    key;\n  omit = cu.arrayify(omit);\n\n  while (len--) {\n    key = props[len];\n\n    if (cu.has(keys, key)) {\n      define(receiver, key, provider[key]);\n    } else if (!(key in receiver) && !cu.has(omit, key)) {\n      cu.copyDescriptor(receiver, provider, key);\n    }\n  }\n};\n\n/**\n * Inherit the static properties, prototype properties, and descriptors\n * from of an object.\n *\n * @param {Object} `receiver`\n * @param {Object} `provider`\n * @param {String|Array} `omit` One or more properties to omit\n * @return {Object}\n * @api public\n */\n\ncu.inherit = function inherit(receiver, provider, omit) {\n  if (!cu.isObject(receiver)) {\n    throw new TypeError('expected receiving object to be an object.');\n  }\n  if (!cu.isObject(provider)) {\n    throw new TypeError('expected providing object to be an object.');\n  }\n\n  var keys = [];\n  for (var key in provider) {\n    keys.push(key);\n    receiver[key] = provider[key];\n  }\n\n  keys = keys.concat(cu.arrayify(omit));\n\n  var a = provider.prototype || provider;\n  var b = receiver.prototype || receiver;\n  cu.copy(b, a, keys);\n};\n\n/**\n * Returns a function for extending the static properties,\n * prototype properties, and descriptors from the `Parent`\n * constructor onto `Child` constructors.\n *\n * ```js\n * var extend = cu.extend(Parent);\n * Parent.extend(Child);\n *\n * // optional methods\n * Parent.extend(Child, {\n *   foo: function() {},\n *   bar: function() {}\n * });\n * ```\n * @param {Function} `Parent` Parent ctor\n * @param {Function} `extend` Optional extend function to handle custom extensions. Useful when updating methods that require a specific prototype.\n *   @param {Function} `Child` Child ctor\n *   @param {Object} `proto` Optionally pass additional prototype properties to inherit.\n *   @return {Object}\n * @api public\n */\n\ncu.extend = function() {\n  // keep it lazy, instead of assigning to `cu.extend`\n  return staticExtend.apply(null, arguments);\n};\n\n/**\n * Bubble up events emitted from static methods on the Parent ctor.\n *\n * @param {Object} `Parent`\n * @param {Array} `events` Event names to bubble up\n * @api public\n */\n\ncu.bubble = function(Parent, events) {\n  events = events || [];\n  Parent.bubble = function(Child, arr) {\n    if (Array.isArray(arr)) {\n      events = union([], events, arr);\n    }\n    var len = events.length;\n    var idx = -1;\n    while (++idx < len) {\n      var name = events[idx];\n      Parent.on(name, Child.emit.bind(Child, name));\n    }\n    cu.bubble(Child, events);\n  };\n};\n"]},"metadata":{},"sourceType":"script"}