{"ast":null,"code":"/*!\n * to-object-path <https://github.com/jonschlinkert/to-object-path>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n'use strict';\n\nvar typeOf = require('kind-of');\n\nmodule.exports = function toPath(args) {\n  if (typeOf(args) !== 'arguments') {\n    args = arguments;\n  }\n\n  return filter(args).join('.');\n};\n\nfunction filter(arr) {\n  var len = arr.length;\n  var idx = -1;\n  var res = [];\n\n  while (++idx < len) {\n    var ele = arr[idx];\n\n    if (typeOf(ele) === 'arguments' || Array.isArray(ele)) {\n      res.push.apply(res, filter(ele));\n    } else if (typeof ele === 'string') {\n      res.push(ele);\n    }\n  }\n\n  return res;\n}","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/to-object-path/index.js"],"names":["typeOf","require","module","exports","toPath","args","arguments","filter","join","arr","len","length","idx","res","ele","Array","isArray","push","apply"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACrC,MAAIL,MAAM,CAACK,IAAD,CAAN,KAAiB,WAArB,EAAkC;AAChCA,IAAAA,IAAI,GAAGC,SAAP;AACD;;AACD,SAAOC,MAAM,CAACF,IAAD,CAAN,CAAaG,IAAb,CAAkB,GAAlB,CAAP;AACD,CALD;;AAOA,SAASD,MAAT,CAAgBE,GAAhB,EAAqB;AACnB,MAAIC,GAAG,GAAGD,GAAG,CAACE,MAAd;AACA,MAAIC,GAAG,GAAG,CAAC,CAAX;AACA,MAAIC,GAAG,GAAG,EAAV;;AAEA,SAAO,EAAED,GAAF,GAAQF,GAAf,EAAoB;AAClB,QAAII,GAAG,GAAGL,GAAG,CAACG,GAAD,CAAb;;AACA,QAAIZ,MAAM,CAACc,GAAD,CAAN,KAAgB,WAAhB,IAA+BC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAnC,EAAuD;AACrDD,MAAAA,GAAG,CAACI,IAAJ,CAASC,KAAT,CAAeL,GAAf,EAAoBN,MAAM,CAACO,GAAD,CAA1B;AACD,KAFD,MAEO,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAClCD,MAAAA,GAAG,CAACI,IAAJ,CAASH,GAAT;AACD;AACF;;AACD,SAAOD,GAAP;AACD","sourcesContent":["/*!\n * to-object-path <https://github.com/jonschlinkert/to-object-path>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar typeOf = require('kind-of');\n\nmodule.exports = function toPath(args) {\n  if (typeOf(args) !== 'arguments') {\n    args = arguments;\n  }\n  return filter(args).join('.');\n};\n\nfunction filter(arr) {\n  var len = arr.length;\n  var idx = -1;\n  var res = [];\n\n  while (++idx < len) {\n    var ele = arr[idx];\n    if (typeOf(ele) === 'arguments' || Array.isArray(ele)) {\n      res.push.apply(res, filter(ele));\n    } else if (typeof ele === 'string') {\n      res.push(ele);\n    }\n  }\n  return res;\n}\n"]},"metadata":{},"sourceType":"script"}