{"ast":null,"code":"/*!\n * has-values <https://github.com/jonschlinkert/has-values>\n *\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n'use strict';\n\nvar typeOf = require('kind-of');\n\nvar isNumber = require('is-number');\n\nmodule.exports = function hasValue(val) {\n  // is-number checks for NaN and other edge cases\n  if (isNumber(val)) {\n    return true;\n  }\n\n  switch (typeOf(val)) {\n    case 'null':\n    case 'boolean':\n    case 'function':\n      return true;\n\n    case 'string':\n    case 'arguments':\n      return val.length !== 0;\n\n    case 'error':\n      return val.message !== '';\n\n    case 'array':\n      var len = val.length;\n\n      if (len === 0) {\n        return false;\n      }\n\n      for (var i = 0; i < len; i++) {\n        if (hasValue(val[i])) {\n          return true;\n        }\n      }\n\n      return false;\n\n    case 'file':\n    case 'map':\n    case 'set':\n      return val.size !== 0;\n\n    case 'object':\n      var keys = Object.keys(val);\n\n      if (keys.length === 0) {\n        return false;\n      }\n\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n\n        if (hasValue(val[key])) {\n          return true;\n        }\n      }\n\n      return false;\n\n    default:\n      {\n        return false;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/node_modules/has-values/index.js"],"names":["typeOf","require","isNumber","module","exports","hasValue","val","length","message","len","i","size","keys","Object","key"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACtC;AACA,MAAIJ,QAAQ,CAACI,GAAD,CAAZ,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,UAAQN,MAAM,CAACM,GAAD,CAAd;AACE,SAAK,MAAL;AACA,SAAK,SAAL;AACA,SAAK,UAAL;AACE,aAAO,IAAP;;AACF,SAAK,QAAL;AACA,SAAK,WAAL;AACE,aAAOA,GAAG,CAACC,MAAJ,KAAe,CAAtB;;AACF,SAAK,OAAL;AACE,aAAOD,GAAG,CAACE,OAAJ,KAAgB,EAAvB;;AACF,SAAK,OAAL;AACE,UAAIC,GAAG,GAAGH,GAAG,CAACC,MAAd;;AACA,UAAIE,GAAG,KAAK,CAAZ,EAAe;AACb,eAAO,KAAP;AACD;;AACD,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAApB,EAAyBC,CAAC,EAA1B,EAA8B;AAC5B,YAAIL,QAAQ,CAACC,GAAG,CAACI,CAAD,CAAJ,CAAZ,EAAsB;AACpB,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;;AACF,SAAK,MAAL;AACA,SAAK,KAAL;AACA,SAAK,KAAL;AACE,aAAOJ,GAAG,CAACK,IAAJ,KAAa,CAApB;;AACF,SAAK,QAAL;AACE,UAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYN,GAAZ,CAAX;;AACA,UAAIM,IAAI,CAACL,MAAL,KAAgB,CAApB,EAAuB;AACrB,eAAO,KAAP;AACD;;AACD,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,IAAI,CAACL,MAAzB,EAAiCG,CAAC,EAAlC,EAAsC;AACpC,YAAII,GAAG,GAAGF,IAAI,CAACF,CAAD,CAAd;;AACA,YAAIL,QAAQ,CAACC,GAAG,CAACQ,GAAD,CAAJ,CAAZ,EAAwB;AACtB,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;;AACF;AAAS;AACP,eAAO,KAAP;AACD;AAvCH;AAyCD,CA/CD","sourcesContent":["/*!\n * has-values <https://github.com/jonschlinkert/has-values>\n *\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar typeOf = require('kind-of');\nvar isNumber = require('is-number');\n\nmodule.exports = function hasValue(val) {\n  // is-number checks for NaN and other edge cases\n  if (isNumber(val)) {\n    return true;\n  }\n\n  switch (typeOf(val)) {\n    case 'null':\n    case 'boolean':\n    case 'function':\n      return true;\n    case 'string':\n    case 'arguments':\n      return val.length !== 0;\n    case 'error':\n      return val.message !== '';\n    case 'array':\n      var len = val.length;\n      if (len === 0) {\n        return false;\n      }\n      for (var i = 0; i < len; i++) {\n        if (hasValue(val[i])) {\n          return true;\n        }\n      }\n      return false;\n    case 'file':\n    case 'map':\n    case 'set':\n      return val.size !== 0;\n    case 'object':\n      var keys = Object.keys(val);\n      if (keys.length === 0) {\n        return false;\n      }\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (hasValue(val[key])) {\n          return true;\n        }\n      }\n      return false;\n    default: {\n      return false;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}