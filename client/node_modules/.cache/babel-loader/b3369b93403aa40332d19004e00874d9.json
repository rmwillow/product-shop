{"ast":null,"code":"var _jsxFileName = \"/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Auth/LoginForm.js\";\nimport React from \"react\";\nimport { useStyles } from \"../Auth/FormStyles\";\nimport { TextField, Button, Typography } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/authActions\";\nimport { withRouter } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { Formik, Form, useField } from \"formik\";\n\nconst CustomField = ({\n  label,\n  type,\n  variant,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(TextField, Object.assign({\n    className: classes.root,\n    variant: variant,\n    label: label\n  }, field, {\n    helperText: errorText,\n    error: !!errorText,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst validationSchema = yup.object({\n  email: yup.string().email(\"Enter a valid Email\").required(),\n  password: yup.string().min(3, \"Too short :(\").required()\n});\n\nfunction LoginForm(props) {\n  const classes = useStyles();\n\n  const handleSubmit = (email, password) => {\n    console.log(props);\n    const user = {\n      email: email,\n      password: password\n    }; //props.history.push(\"/products\");\n\n    props.login(user);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.welcome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Welcome\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginBottom: \"1.3rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Log in now to shop anything you want\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: (data, {\n      setSubmitting\n    }) => {\n      setSubmitting(true); //! make async call here!!!!\n\n      handleSubmit(data.email, data.password);\n      setSubmitting(false);\n    },\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    errors,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomField, {\n    label: \"Email\",\n    variant: \"outlined\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomField, {\n    label: \"Password\",\n    type: \"password\",\n    variant: \"outlined\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      width: \"100%\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    style: {\n      color: \"white\",\n      backgroundColor: \"black\",\n      width: \"100%\"\n    },\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"Log in\")))));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: user => dispatch(actions.login(user)),\n    logOut: () => dispatch(actions.logOut())\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(LoginForm));","map":{"version":3,"sources":["/Users/rachelmcgrath/Desktop/projects/product-shop/client/src/components/Auth/LoginForm.js"],"names":["React","useStyles","TextField","Button","Typography","connect","actions","withRouter","yup","Formik","Form","useField","CustomField","label","type","variant","props","field","meta","errorText","error","touched","classes","root","validationSchema","object","email","string","required","password","min","LoginForm","handleSubmit","console","log","user","login","welcome","textAlign","marginBottom","data","setSubmitting","values","errors","isSubmitting","width","color","backgroundColor","mapDispatchToProps","dispatch","logOut"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useStyles } from \"../Auth/FormStyles\";\nimport { TextField, Button, Typography } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/authActions\";\nimport { withRouter } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { Formik, Form, useField } from \"formik\";\n\nconst CustomField = ({ label, type, variant, ...props }) => {\n    const [field, meta] = useField(props);\n    const errorText = meta.error && meta.touched ? meta.error : \"\";\n    const classes = useStyles();\n    return (\n        <TextField\n            className={classes.root}\n            variant={variant}\n            label={label}\n            {...field}\n            helperText={errorText}\n            error={!!errorText}\n            type={type}\n        />\n    );\n};\n\nconst validationSchema = yup.object({\n    email: yup.string().email(\"Enter a valid Email\").required(),\n    password: yup.string().min(3, \"Too short :(\").required(),\n});\nfunction LoginForm(props) {\n    const classes = useStyles();\n    const handleSubmit = (email, password) => {\n        console.log(props);\n        const user = {\n            email: email,\n            password: password,\n        };\n        //props.history.push(\"/products\");\n        props.login(user);\n    };\n    return (\n        <div>\n            <p className={classes.welcome}>Welcome</p>\n            <div style={{ textAlign: \"center\", marginBottom: \"1.3rem\" }}>\n                <Typography variant=\"p\">Log in now to shop anything you want</Typography>\n            </div>\n            <Formik\n                initialValues={{ email: \"\", password: \"\" }}\n                onSubmit={(data, { setSubmitting }) => {\n                    setSubmitting(true);\n                    //! make async call here!!!!\n                    handleSubmit(data.email, data.password);\n                    setSubmitting(false);\n                }}\n                validationSchema={validationSchema}\n            >\n                {({ values, errors, isSubmitting }) => (\n                    <Form>\n                        <div>\n                            <CustomField label=\"Email\" variant=\"outlined\" name=\"email\" />\n                        </div>\n                        <div>\n                            <CustomField\n                                label=\"Password\"\n                                type=\"password\"\n                                variant=\"outlined\"\n                                name=\"password\"\n                            />\n                        </div>\n                        <div style={{ textAlign: \"center\", width: \"100%\", marginBottom: \"1rem\" }}>\n                            <Button\n                                disabled={isSubmitting}\n                                style={{\n                                    color: \"white\",\n                                    backgroundColor: \"black\",\n                                    width: \"100%\",\n                                }}\n                                type=\"submit\"\n                            >\n                                Log in\n                            </Button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        login: (user) => dispatch(actions.login(user)),\n        logOut: () => dispatch(actions.logOut()),\n    };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(LoginForm));\n"]},"metadata":{},"sourceType":"module"}